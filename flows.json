[
    {
        "id": "4789bd7cce04ab75",
        "type": "tab",
        "label": "Flow 5",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5f12a9f4eb6c06e3",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "33c15f59b4cf3c76",
        "type": "ui_tab",
        "name": "23127396 - Luong Linh Khoi",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c89414eea0de15ed",
        "type": "ui_group",
        "name": "Main",
        "tab": "33c15f59b4cf3c76",
        "order": 1,
        "disp": true,
        "width": "17",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9156f6390ee44837",
        "type": "ui_group",
        "name": "Statistics",
        "tab": "33c15f59b4cf3c76",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "login_tab",
        "type": "ui_tab",
        "name": "Đăng nhập",
        "icon": "lock",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "home_tab",
        "type": "ui_tab",
        "name": "Trang chủ",
        "icon": "home",
        "order": 2,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "03624fd6e0192ed3",
        "type": "ui_tab",
        "name": "Quên mật khẩu",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "317c5a2e2a252213",
        "type": "ui_tab",
        "name": "Xác nhận",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "5fbc7711003e14a0",
        "type": "ui_tab",
        "name": "Mật khẩu mới",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "4a22a1a7d67fc9cc",
        "type": "ui_tab",
        "name": "Đăng ký",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "login_group",
        "type": "ui_group",
        "name": "Chào mừng !!!",
        "tab": "login_tab",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "bc2745e9261eecb8",
        "type": "ui_group",
        "name": "Chất lượng không khí",
        "tab": "home_tab",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2479d9c11390cb6d",
        "type": "ui_group",
        "name": "Môi trường hiện tại",
        "tab": "home_tab",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c902f90e6aca1a97",
        "type": "ui_group",
        "name": "Biểu đồ",
        "tab": "home_tab",
        "order": 3,
        "disp": true,
        "width": 14,
        "collapse": false,
        "className": ""
    },
    {
        "id": "8841171fe2e5f73f",
        "type": "ui_group",
        "name": "Tùy chỉnh ngưỡng",
        "tab": "home_tab",
        "order": 4,
        "disp": true,
        "width": 26,
        "collapse": false,
        "className": ""
    },
    {
        "id": "72aa82b9e770af92",
        "type": "ui_group",
        "name": "Thông tin",
        "tab": "03624fd6e0192ed3",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f0f84895977cfd6f",
        "type": "ui_group",
        "name": "Mã xác nhận",
        "tab": "317c5a2e2a252213",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c57aef7b9edd92a0",
        "type": "ui_group",
        "name": "Thông tin",
        "tab": "5fbc7711003e14a0",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6f469d59f7c4209a",
        "type": "ui_group",
        "name": "Thông tin",
        "tab": "4a22a1a7d67fc9cc",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e31421cc3e4b27f6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.mqtt-dashboard.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "1183ee75764de5bf",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.mqtt-dashboard.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "dbef2de882ccf871",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "projectIOT",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "506d3aa414c10b90",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "23b924b292f89500",
        "type": "firebase config",
        "firebaseurl": "air-quality-control-4fdcc-default-rtdb",
        "loginType": "none"
    },
    {
        "id": "24d3a8a44a8c6323",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "b8a49ba24ac7b0c8",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "70b8cee680a5bac3",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "c37c5cd5aa9adc19",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "d4075a242165d372",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "2d8b7518ecdc746d",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "c5fa53b66969cc66",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "83463ce86c453679",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "25e18d3ba0403a9d",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "154449bc35d4f73f",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "cdb08049b10ee670",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "c7f291cc2c737056",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "fc71397431acaf57",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "d0d320226b537b0e",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "login_group",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "045ff6884f72bdfb",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "login_group",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "badf48be0c75d074",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "login_group",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "59656a30a91796e2",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "login_group",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "31b5199ff1150888",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "login_group",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "adadb3c8b788f8d1",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "login_group",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "0cce13cfba88e426",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "2479d9c11390cb6d",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "3a78d36bab840c30",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "2479d9c11390cb6d",
        "order": 3,
        "width": 7,
        "height": 1
    },
    {
        "id": "bfe50f682bad81e7",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "bc2745e9261eecb8",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "be1e97137fcebd85",
        "type": "ui_spacer",
        "z": "4789bd7cce04ab75",
        "name": "spacer",
        "group": "bc2745e9261eecb8",
        "order": 3,
        "width": 7,
        "height": 1
    },
    {
        "id": "3163121de75d46a2",
        "type": "ui_tab",
        "name": "Xác nhận",
        "icon": "dashboard",
        "disabled": false,
        "hidden": true
    },
    {
        "id": "849952dfe8ebf55b",
        "type": "ui_tab",
        "name": "Đổi mật khẩu",
        "icon": "dashboard",
        "disabled": false,
        "hidden": true
    },
    {
        "id": "a0c3702afa3195de",
        "type": "telegram bot",
        "botname": "AirQuality193_bot",
        "usernames": "username",
        "chatids": "8415865374",
        "baseapiurl": "",
        "testenvironment": false,
        "updatemode": "polling",
        "pollinterval": 300,
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": 6667,
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbothost": "0.0.0.0",
        "localbotport": 8443,
        "publicbotport": 8443,
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "e4a49691279013b8",
        "type": "ui_group",
        "name": "Mã xác nhận",
        "tab": "3163121de75d46a2",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2cca8e299216fbbb",
        "type": "ui_group",
        "name": "Mật khẩu mới",
        "tab": "849952dfe8ebf55b",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4ffc6ab462b6373d",
        "type": "ui_group",
        "name": "Lịch sử cảnh báo",
        "tab": "home_tab",
        "order": 5,
        "disp": true,
        "width": "26",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9cc5842a93337dc0",
        "type": "ui_button",
        "z": "4789bd7cce04ab75",
        "name": "Đăng nhập",
        "group": "login_group",
        "order": 4,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Đăng nhập",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "#",
        "className": "",
        "icon": "login",
        "payload": "{\"tab\":\"Trang chủ\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 90,
        "y": 380,
        "wires": [
            [
                "43abd898fc5af154"
            ]
        ]
    },
    {
        "id": "c3c1047dbefadf66",
        "type": "ui_ui_control",
        "z": "4789bd7cce04ab75",
        "name": "Switch Tab",
        "events": "all",
        "x": 610,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "5eb34e14925f3b20",
        "type": "ui_text_input",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Email",
        "tooltip": "",
        "group": "login_group",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Email",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "c2ae3c7979f05a8a"
            ]
        ]
    },
    {
        "id": "9c77eabd86c09362",
        "type": "ui_text_input",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Mật khẩu",
        "tooltip": "",
        "group": "login_group",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": 300,
        "topic": "Password",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 260,
        "y": 260,
        "wires": [
            [
                "c2ae3c7979f05a8a"
            ]
        ]
    },
    {
        "id": "27b4827f50c9d66c",
        "type": "ui_gauge",
        "z": "4789bd7cce04ab75",
        "name": "",
        "group": "2479d9c11390cb6d",
        "order": 1,
        "width": "6",
        "height": 9,
        "gtype": "wave",
        "title": "Độ ẩm",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 370,
        "y": 1180,
        "wires": []
    },
    {
        "id": "017139388b617fd0",
        "type": "ui_gauge",
        "z": "4789bd7cce04ab75",
        "name": "",
        "group": "bc2745e9261eecb8",
        "order": 1,
        "width": "6",
        "height": 9,
        "gtype": "gage",
        "title": "Bụi mịn",
        "label": "µg/m³",
        "format": "{{value}}",
        "min": "0",
        "max": "500",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 380,
        "y": 1300,
        "wires": []
    },
    {
        "id": "e9e2467d138c60c9",
        "type": "ui_gauge",
        "z": "4789bd7cce04ab75",
        "name": "",
        "group": "2479d9c11390cb6d",
        "order": 4,
        "width": "6",
        "height": 9,
        "gtype": "gage",
        "title": "Nhiệt độ",
        "label": "℃ ",
        "format": "{{value}}",
        "min": "-40",
        "max": "80",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 380,
        "y": 1060,
        "wires": []
    },
    {
        "id": "0ef9c9f4da5cf1bb",
        "type": "ui_slider",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Nhiệt độ",
        "tooltip": "",
        "group": "8841171fe2e5f73f",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "Temperature",
        "topicType": "str",
        "min": "-40",
        "max": "80",
        "step": 1,
        "className": "",
        "x": 940,
        "y": 720,
        "wires": [
            [
                "9f7971b0d23072b6",
                "06b8c52b9d307a9c",
                "711d2cd73b763095"
            ]
        ]
    },
    {
        "id": "72bfd5c3bdfc517a",
        "type": "ui_slider",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Khí gas",
        "tooltip": "",
        "group": "8841171fe2e5f73f",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "Gas",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 940,
        "y": 880,
        "wires": [
            [
                "c675fbcc45db0cb2",
                "8756eba2871a1fc8",
                "711d2cd73b763095"
            ]
        ]
    },
    {
        "id": "a2fbec245cf5eb95",
        "type": "ui_slider",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Bụi mịn",
        "tooltip": "",
        "group": "8841171fe2e5f73f",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "PM",
        "topicType": "str",
        "min": 0,
        "max": "500",
        "step": 1,
        "className": "",
        "x": 940,
        "y": 960,
        "wires": [
            [
                "a89dec4a85eef6d7",
                "5b8600c7d13121e8",
                "711d2cd73b763095"
            ]
        ]
    },
    {
        "id": "69e7ce7444b34cc8",
        "type": "ui_slider",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Độ ẩm",
        "tooltip": "",
        "group": "8841171fe2e5f73f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "Humidity",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 930,
        "y": 640,
        "wires": [
            [
                "085fd65b53c37ea4",
                "7f744afa5672cf91",
                "711d2cd73b763095"
            ]
        ]
    },
    {
        "id": "9f7971b0d23072b6",
        "type": "ui_text",
        "z": "4789bd7cce04ab75",
        "group": "8841171fe2e5f73f",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Giá trị:",
        "format": "{{msg.payload}}°C",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "Arial Black,Arial Black,Gadget,sans-serif",
        "fontSize": 16,
        "color": "#f4230b",
        "x": 1270,
        "y": 720,
        "wires": []
    },
    {
        "id": "085fd65b53c37ea4",
        "type": "ui_text",
        "z": "4789bd7cce04ab75",
        "group": "8841171fe2e5f73f",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Giá trị:",
        "format": "{{msg.payload}}%",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "Arial Black,Arial Black,Gadget,sans-serif",
        "fontSize": 16,
        "color": "#f4230b",
        "x": 1270,
        "y": 640,
        "wires": []
    },
    {
        "id": "c675fbcc45db0cb2",
        "type": "ui_text",
        "z": "4789bd7cce04ab75",
        "group": "8841171fe2e5f73f",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Giá trị:",
        "format": "{{msg.payload}}ppm",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "Arial Black,Arial Black,Gadget,sans-serif",
        "fontSize": 16,
        "color": "#f4230b",
        "x": 1270,
        "y": 880,
        "wires": []
    },
    {
        "id": "a89dec4a85eef6d7",
        "type": "ui_text",
        "z": "4789bd7cce04ab75",
        "group": "8841171fe2e5f73f",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Giá trị:",
        "format": "{{msg.payload}}µg/m³",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "Arial Black,Arial Black,Gadget,sans-serif",
        "fontSize": 16,
        "color": "#f4230b",
        "x": 1270,
        "y": 960,
        "wires": []
    },
    {
        "id": "47894f935683637e",
        "type": "ui_switch",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Relay",
        "tooltip": "",
        "group": "8841171fe2e5f73f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 930,
        "y": 1020,
        "wires": [
            [
                "80f3d7810e70b6ed"
            ]
        ]
    },
    {
        "id": "46f80542025704f6",
        "type": "ui_switch",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Buzzer",
        "tooltip": "",
        "group": "8841171fe2e5f73f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 400,
        "y": 1000,
        "wires": [
            [
                "7803d3990028c1dc",
                "6e7e6eaabe3b17f9"
            ]
        ]
    },
    {
        "id": "ec26e58c4eabdce4",
        "type": "ui_text_input",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Email",
        "tooltip": "",
        "group": "72aa82b9e770af92",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "email",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 770,
        "y": 180,
        "wires": [
            [
                "ab7f95948b678a44"
            ]
        ]
    },
    {
        "id": "fc3eb8e4a29b6b7d",
        "type": "ui_button",
        "z": "4789bd7cce04ab75",
        "name": "Quên mật khẩu",
        "group": "login_group",
        "order": 10,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Quên mật khẩu?",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "{\"tab\":\"Quên mật khẩu\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 100,
        "y": 460,
        "wires": [
            [
                "c3c1047dbefadf66"
            ]
        ]
    },
    {
        "id": "22f1fb51e114a8e8",
        "type": "ui_text_input",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Mã xác nhận",
        "tooltip": "",
        "group": "e4a49691279013b8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 210,
        "y": 20,
        "wires": [
            [
                "f41b309f0abab0a9"
            ]
        ]
    },
    {
        "id": "b2bb91c65662416d",
        "type": "ui_button",
        "z": "4789bd7cce04ab75",
        "name": "Quên mật khẩu",
        "group": "72aa82b9e770af92",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Tiếp tục",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "#",
        "className": "",
        "icon": "confirm",
        "payload": "{\"tab\":\"Xác nhận - Quên mật khẩu\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1020,
        "y": 340,
        "wires": [
            [
                "c81f503bb67dedc8",
                "83a0af45e35e383f"
            ]
        ]
    },
    {
        "id": "f471ce0e5d61782d",
        "type": "ui_text_input",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Mật khẩu",
        "tooltip": "",
        "group": "c57aef7b9edd92a0",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": 300,
        "topic": "pass1",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 220,
        "y": 120,
        "wires": [
            [
                "6aae8016f9d201b2"
            ]
        ]
    },
    {
        "id": "564bca341d2d897a",
        "type": "ui_text_input",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Xác nhận mật khẩu",
        "tooltip": "",
        "group": "c57aef7b9edd92a0",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": 300,
        "topic": "pass2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "6aae8016f9d201b2"
            ]
        ]
    },
    {
        "id": "83a0af45e35e383f",
        "type": "ui_ui_control",
        "z": "4789bd7cce04ab75",
        "name": "Switch Tab",
        "events": "all",
        "x": 1290,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "808a1f6aa705ae07",
        "type": "ui_button",
        "z": "4789bd7cce04ab75",
        "name": "Login Button",
        "group": "c57aef7b9edd92a0",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Xác nhận",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "#",
        "className": "",
        "icon": "confirm",
        "payload": "{\"tab\":\"Trang chủ\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 790,
        "y": 120,
        "wires": [
            [
                "6cc0f8cb02a32b23"
            ]
        ]
    },
    {
        "id": "98e0cec573e43557",
        "type": "ui_ui_control",
        "z": "4789bd7cce04ab75",
        "name": "Switch Tab",
        "events": "all",
        "x": 1250,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "f613b6fe4834e1bc",
        "type": "ui_button",
        "z": "4789bd7cce04ab75",
        "name": "Đăng kí",
        "group": "login_group",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Không có tài khoản? Tạo một cái.",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "{\"tab\":\"Đăng ký\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 80,
        "y": 420,
        "wires": [
            [
                "c3c1047dbefadf66"
            ]
        ]
    },
    {
        "id": "7c15f6f6a52612bc",
        "type": "ui_text_input",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Email",
        "tooltip": "",
        "group": "6f469d59f7c4209a",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "email",
        "delay": 300,
        "topic": "Email",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1430,
        "y": 20,
        "wires": [
            [
                "b3b7393926be804d"
            ]
        ]
    },
    {
        "id": "988a972b174c9ec8",
        "type": "ui_text_input",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Họ",
        "tooltip": "",
        "group": "6f469d59f7c4209a",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Họ",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1430,
        "y": 60,
        "wires": [
            [
                "b3b7393926be804d"
            ]
        ]
    },
    {
        "id": "8cd8ccded6b7916c",
        "type": "ui_text_input",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Tên",
        "tooltip": "",
        "group": "6f469d59f7c4209a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Tên",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1430,
        "y": 100,
        "wires": [
            [
                "b3b7393926be804d"
            ]
        ]
    },
    {
        "id": "f6721423cd57c34b",
        "type": "ui_button",
        "z": "4789bd7cce04ab75",
        "name": "Login Button",
        "group": "6f469d59f7c4209a",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Tiếp tục",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "#",
        "className": "",
        "icon": "register",
        "payload": "{\"tab\": \"Xác nhận\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1890,
        "y": 120,
        "wires": [
            [
                "4780eec83f89be15",
                "54d8153af10dbd2f"
            ]
        ]
    },
    {
        "id": "4780eec83f89be15",
        "type": "ui_ui_control",
        "z": "4789bd7cce04ab75",
        "name": "Switch Tab",
        "events": "all",
        "x": 2130,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "5271cc7681e5a2bb",
        "type": "ui_button",
        "z": "4789bd7cce04ab75",
        "name": "Xác nhận đăng kí",
        "group": "e4a49691279013b8",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Tiếp tục",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "#",
        "className": "",
        "icon": "confirm",
        "payload": "{\"tab\":\"Mật khẩu mới\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 190,
        "y": 60,
        "wires": [
            [
                "42f3eb7e9d3b520c"
            ]
        ]
    },
    {
        "id": "42b60bfbf5ee6005",
        "type": "ui_ui_control",
        "z": "4789bd7cce04ab75",
        "name": "Switch Tab",
        "events": "all",
        "x": 690,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c8dbce888abe0e73",
        "type": "ui_dropdown",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Giới tính",
        "tooltip": "",
        "place": "Select option",
        "group": "6f469d59f7c4209a",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Nam",
                "value": "Nam",
                "type": "str"
            },
            {
                "label": "Nữ",
                "value": "Nữ",
                "type": "str"
            },
            {
                "label": "Khác",
                "value": "Khác",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Giới tính",
        "topicType": "str",
        "className": "",
        "x": 1440,
        "y": 180,
        "wires": [
            [
                "b3b7393926be804d"
            ]
        ]
    },
    {
        "id": "4137efe3503a8103",
        "type": "ui_text_input",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Địa chỉ",
        "tooltip": "",
        "group": "6f469d59f7c4209a",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Địa chỉ",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1430,
        "y": 220,
        "wires": [
            [
                "b3b7393926be804d"
            ]
        ]
    },
    {
        "id": "ccfcd3e13a7f6613",
        "type": "ui_button",
        "z": "4789bd7cce04ab75",
        "name": "",
        "group": "c902f90e6aca1a97",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "RESET DỮ LIỆU",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 1920,
        "wires": [
            [
                "3c03d45d17e6bcfa"
            ]
        ]
    },
    {
        "id": "80f3d7810e70b6ed",
        "type": "mqtt out",
        "z": "4789bd7cce04ab75",
        "name": "",
        "topic": "/wokwi/relay",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e31421cc3e4b27f6",
        "x": 1270,
        "y": 1020,
        "wires": []
    },
    {
        "id": "7803d3990028c1dc",
        "type": "mqtt out",
        "z": "4789bd7cce04ab75",
        "name": "",
        "topic": "/wokwi/buzzer",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e31421cc3e4b27f6",
        "x": 600,
        "y": 980,
        "wires": []
    },
    {
        "id": "5d155dae569236ae",
        "type": "mqtt in",
        "z": "4789bd7cce04ab75",
        "name": "",
        "topic": "/wokwi/Temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1183ee75764de5bf",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1060,
        "wires": [
            [
                "e9e2467d138c60c9",
                "ddbd2e4cc5a3bf7e"
            ]
        ]
    },
    {
        "id": "98b62a45b2b4d69b",
        "type": "mqtt in",
        "z": "4789bd7cce04ab75",
        "name": "",
        "topic": "/wokwi/Humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1183ee75764de5bf",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1180,
        "wires": [
            [
                "27b4827f50c9d66c",
                "9f40d199a6c68dd0"
            ]
        ]
    },
    {
        "id": "8bf01f73780e5490",
        "type": "mqtt in",
        "z": "4789bd7cce04ab75",
        "name": "",
        "topic": "/wokwi/PM",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1183ee75764de5bf",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 1300,
        "wires": [
            [
                "017139388b617fd0",
                "d53b7b5a35572c89"
            ]
        ]
    },
    {
        "id": "fa39cf80cc2c2bc6",
        "type": "ui_gauge",
        "z": "4789bd7cce04ab75",
        "name": "",
        "group": "bc2745e9261eecb8",
        "order": 4,
        "width": "6",
        "height": 9,
        "gtype": "gage",
        "title": "Gas",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "80",
        "diff": false,
        "className": "",
        "x": 370,
        "y": 1420,
        "wires": []
    },
    {
        "id": "8404a64074bf946f",
        "type": "mqtt in",
        "z": "4789bd7cce04ab75",
        "name": "",
        "topic": "/wokwi/Gas",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1183ee75764de5bf",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1420,
        "wires": [
            [
                "fa39cf80cc2c2bc6",
                "8c5bafa824d9bd4a"
            ]
        ]
    },
    {
        "id": "c2ae3c7979f05a8a",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lấy email, password",
        "func": "if (msg.topic === \"Email\") {\n    flow.set(\"email_login\", msg.payload);\n}\nif (msg.topic === \"Password\") {\n    flow.set(\"password\", msg.payload);\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "43abd898fc5af154",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Tìm user trên database",
        "func": "let email = flow.get(\"email_login\");\nmsg.topic = \"SELECT password FROM users WHERE email = (?)\";\nmsg.payload = [email];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 320,
        "wires": [
            [
                "1abf675595c9116d"
            ]
        ]
    },
    {
        "id": "1abf675595c9116d",
        "type": "mysql",
        "z": "4789bd7cce04ab75",
        "mydb": "dbef2de882ccf871",
        "name": "",
        "x": 390,
        "y": 320,
        "wires": [
            [
                "868770301b99a7e5"
            ]
        ]
    },
    {
        "id": "868770301b99a7e5",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "So sánh password",
        "func": "let password = flow.get(\"password\");\nif  (password === msg.payload[0].password)\n    msg.payload = {\"tab\": \"Trang chủ\"};\nelse\n    msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 320,
        "wires": [
            [
                "6fb2fb7e51cf1780"
            ]
        ]
    },
    {
        "id": "b3b7393926be804d",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lấy thông tin",
        "func": "if (msg.topic === \"Email\") {\n    flow.set(\"email\", msg.payload);\n}\nelse if (msg.topic === \"Họ\") {\n    flow.set(\"họ\", msg.payload);\n}\nelse if (msg.topic === \"Tên\") {\n    flow.set(\"tên\", msg.payload);\n}\nelse if (msg.topic === \"Ngày sinh\") {\n    flow.set(\"ngày_sinh\", msg.payload);\n}\nelse if (msg.topic === \"Giới tính\") {\n    flow.set(\"giới_tính\", msg.payload);\n}\nelse if (msg.topic === \"Địa chỉ\") {\n    flow.set(\"địa_chỉ\", msg.payload);\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "0004f4a1eaa2d731",
        "type": "ui_date_picker",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Ngày sinh",
        "group": "6f469d59f7c4209a",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "Ngày sinh",
        "topicType": "str",
        "className": "",
        "x": 1440,
        "y": 140,
        "wires": [
            [
                "b3b7393926be804d"
            ]
        ]
    },
    {
        "id": "6aae8016f9d201b2",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lưu password mới",
        "func": "if (msg.topic === \"pass1\") {\n    flow.set(\"pass1\", msg.payload);\n}\nif (msg.topic === \"pass2\") {\n    flow.set(\"pass2\", msg.payload);\n}\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "6cc0f8cb02a32b23",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Tạo password",
        "func": "let p1 = flow.get(\"pass1\");\nlet p2 = flow.get(\"pass2\");\n\nlet out1 = null;\nlet out2 = null;\n\nif (p1 !== undefined && p2 !== undefined) {\n    if (p1 === p2) {\n\n        let email = flow.get(\"email\");\n        let ho = flow.get(\"họ\");\n        let ten = flow.get(\"tên\");\n\n        let ngay_sinh_ts = flow.get(\"ngày_sinh\")\n        let ngay_sinh = null;\n        // Chuyển timestamp sang YYYY-MM-DD nếu tồn tại\n        if (ngay_sinh_ts) {\n            let d = new Date(ngay_sinh_ts);\n            let yyyy = d.getFullYear();\n            let mm = String(d.getMonth() + 1).padStart(2, '0');\n            let dd = String(d.getDate()).padStart(2, '0');\n            ngay_sinh = `${yyyy}-${mm}-${dd}`;\n        }\n        \n        let gioi_tinh = flow.get(\"giới_tính\");\n        let dia_chi = flow.get(\"địa_chỉ\");\n        let password = p1;\n\n        out1 = {\n            topic: \"INSERT INTO users (email, ho, ten, ngay_sinh, gioi_tinh, dia_chi, password) VALUES (?, ?, ?, ?, ?, ?, ?)\",\n            payload: [email, ho, ten, ngay_sinh, gioi_tinh, dia_chi, password]\n        };\n        out2 = { payload: { tab: \"Trang chủ\" } };\n    } else {\n        return [null, null];\n    }\n}\n\nreturn [out1, out2];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 120,
        "wires": [
            [
                "08b68a4090d8c16f"
            ],
            [
                "98e0cec573e43557"
            ]
        ]
    },
    {
        "id": "08b68a4090d8c16f",
        "type": "mysql",
        "z": "4789bd7cce04ab75",
        "mydb": "dbef2de882ccf871",
        "name": "",
        "x": 1250,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "63ba8506a95b9402",
        "type": "inject",
        "z": "4789bd7cce04ab75",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1570,
        "y": 540,
        "wires": [
            [
                "5b7af73467072fd9"
            ]
        ]
    },
    {
        "id": "5b7af73467072fd9",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Tạo database users",
        "func": "msg.topic = `\nCREATE TABLE IF NOT EXISTS users (\n  id INT NOT NULL AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  ho VARCHAR(50) NOT NULL,\n  ten VARCHAR(50) NOT NULL,\n  ngay_sinh DATE DEFAULT NULL,\n  gioi_tinh VARCHAR(20) DEFAULT NULL,\n  dia_chi VARCHAR(255) DEFAULT NULL,\n  password VARCHAR(255) NOT NULL,\n  PRIMARY KEY (id),\n  UNIQUE KEY email (email)\n)\n`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 540,
        "wires": [
            [
                "b98872a9d9ef559c"
            ]
        ]
    },
    {
        "id": "b98872a9d9ef559c",
        "type": "mysql",
        "z": "4789bd7cce04ab75",
        "mydb": "dbef2de882ccf871",
        "name": "Tạo database users",
        "x": 2020,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "a133b72d48fecc45",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "chuẩn bị gửi statistics lên cloud",
        "func": "msg.childpath = \"Statistics\";\n\nif(!msg.payload.hasOwnProperty(\"temperature\")){\n    msg.payload.temperature = flow.get(\"temperature\");\n}\nif(!msg.payload.hasOwnProperty(\"humidity\")){\n    msg.payload.humidity = flow.get(\"humidity\");\n}\nif(!msg.payload.hasOwnProperty(\"pm\")){\n    msg.payload.pm = flow.get(\"pm\");\n}\nif(!msg.payload.hasOwnProperty(\"gas\")){\n    msg.payload.gas = flow.get(\"gas\");\n}\nmsg.payload.timestamp = new Date().toISOString();\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1200,
        "wires": [
            [
                "1efa76f26dd44444"
            ]
        ]
    },
    {
        "id": "8c5bafa824d9bd4a",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "tiền xử lý gas",
        "func": "flow.set(\"gas\", msg.payload); // phòng khi timeout\nmsg.topic = \"gas\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1480,
        "wires": [
            [
                "d83286de8be64765",
                "a87e19e5dad0c0f0",
                "3c470e07b725fc2c"
            ]
        ]
    },
    {
        "id": "d53b7b5a35572c89",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "tiền xử lý PM",
        "func": "flow.set(\"pm\", msg.payload); // phòng khi timeout\nmsg.topic = \"pm\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1360,
        "wires": [
            [
                "d83286de8be64765",
                "a87e19e5dad0c0f0",
                "3c470e07b725fc2c"
            ]
        ]
    },
    {
        "id": "9f40d199a6c68dd0",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "tiền xử lý độ ẩm",
        "func": "flow.set(\"humidity\", msg.payload); // phòng khi timeout\nmsg.topic = \"humidity\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1240,
        "wires": [
            [
                "d83286de8be64765",
                "a87e19e5dad0c0f0",
                "3c470e07b725fc2c"
            ]
        ]
    },
    {
        "id": "ddbd2e4cc5a3bf7e",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "tiền xử lý nhiệt độ",
        "func": "flow.set(\"temperature\", msg.payload); // phòng khi timeout\nmsg.topic = \"temperature\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1120,
        "wires": [
            [
                "d83286de8be64765",
                "a87e19e5dad0c0f0",
                "3c470e07b725fc2c"
            ]
        ]
    },
    {
        "id": "d83286de8be64765",
        "type": "join",
        "z": "4789bd7cce04ab75",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": true,
        "timeout": "1",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 690,
        "y": 1200,
        "wires": [
            [
                "a133b72d48fecc45"
            ]
        ]
    },
    {
        "id": "7f744afa5672cf91",
        "type": "mqtt out",
        "z": "4789bd7cce04ab75",
        "name": "",
        "topic": "/wokwi/Humidity/Threshold",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e31421cc3e4b27f6",
        "x": 1340,
        "y": 600,
        "wires": []
    },
    {
        "id": "06b8c52b9d307a9c",
        "type": "mqtt out",
        "z": "4789bd7cce04ab75",
        "name": "",
        "topic": "/wokwi/Temperature/Threshold",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e31421cc3e4b27f6",
        "x": 1350,
        "y": 680,
        "wires": []
    },
    {
        "id": "8756eba2871a1fc8",
        "type": "mqtt out",
        "z": "4789bd7cce04ab75",
        "name": "",
        "topic": "/wokwi/Gas/Threshold",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e31421cc3e4b27f6",
        "x": 1320,
        "y": 840,
        "wires": []
    },
    {
        "id": "5b8600c7d13121e8",
        "type": "mqtt out",
        "z": "4789bd7cce04ab75",
        "name": "",
        "topic": "/wokwi/PM/Threshold",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e31421cc3e4b27f6",
        "x": 1320,
        "y": 920,
        "wires": []
    },
    {
        "id": "b24bc7a393ad7244",
        "type": "mqtt in",
        "z": "4789bd7cce04ab75",
        "name": "",
        "topic": "/wokwi/buzzer/alert",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e31421cc3e4b27f6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1000,
        "wires": [
            [
                "46f80542025704f6"
            ]
        ]
    },
    {
        "id": "6e7e6eaabe3b17f9",
        "type": "debug",
        "z": "4789bd7cce04ab75",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 1040,
        "wires": []
    },
    {
        "id": "711d2cd73b763095",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lấy dữ liệu",
        "func": "let thresholdObj = {};\n\nif (msg.topic === \"Temperature\") {\n    flow.set(\"pending_Temperature\", Number(msg.payload)); \n    thresholdObj.temperature_threshold = Number(msg.payload)\n}\nif (msg.topic === \"Humidity\") {\n    flow.set(\"pending_Humidity\", Number(msg.payload)); \n    thresholdObj.humidity_threshold = Number(msg.payload)\n}\nif (msg.topic === \"Gas\") {\n    flow.set(\"pending_Gas\", Number(msg.payload)); \n    thresholdObj.gas_threshold = Number(msg.payload)\n}\nif (msg.topic === \"PM\") {\n    flow.set(\"pending_PM\", Number(msg.payload)); \n    thresholdObj.pm_threshold = Number(msg.payload)\n}\n\nmsg.payload = thresholdObj;\nreturn msg; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 780,
        "wires": [
            [
                "91fe1baad026c251"
            ]
        ]
    },
    {
        "id": "a87e19e5dad0c0f0",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Kiểm tra ngưỡng",
        "func": "// Lấy email từ các trường hợp khác nhau\nlet email = flow.get(\"email_login\") || flow.get(\"email\") || flow.get(\"email_rs_pass\");\n\n// Nếu không có email thì dừng\nif (!email) {\n    node.warn(\"Không tìm thấy email người nhận\");\n    return null;\n}\n\n// Danh sách các loại cảm biến cần kiểm tra\nlet sensors = [\n    { key: \"temperature\", thresholdKey: \"pending_Temperature\", name: \"Nhiệt độ\", unit: \"°C\" },\n    { key: \"humidity\", thresholdKey: \"pending_Humidity\", name: \"Độ ẩm\", unit: \"%\" },\n    { key: \"gas\", thresholdKey: \"pending_Gas\", name: \"Khí gas\", unit: \"ppm\" },\n    { key: \"pm\", thresholdKey: \"pending_PM\", name: \"Bụi mịn\", unit: \"µg/m³\" }\n];\n\n// Mảng chứa các cảnh báo cần gửi\nlet alerts = [];\n\nsensors.forEach(sensor => {\n    let value = flow.get(sensor.key);\n    let threshold = flow.get(sensor.thresholdKey);\n    let lastAlert = flow.get(`lastAlert_${sensor.key}`) || null;\n\n    if (value !== undefined && threshold !== undefined) {\n        if (value > threshold) {\n            if (lastAlert === null || lastAlert !== value) {\n                flow.set(`lastAlert_${sensor.key}`, value);\n                alerts.push(`${sensor.name} hiện tại là ${value}${sensor.unit} đã vượt ngưỡng ${threshold}${sensor.unit}`);\n            }\n        } else {\n            flow.set(`lastAlert_${sensor.key}`, null); // Reset khi an toàn\n        }\n    }\n});\n\n// Nếu có cảnh báo thì gửi email\nif (alerts.length > 0) {\n    msg.to = email;\n    msg.topic = \"CẢNH BÁO HỆ THỐNG (VUI LÒNG BẬT MÁY LỌC KHÔNG KHÍ)\";\n    msg.payload = alerts.join(\"\\n\"); // Ghép các cảnh báo thành nhiều dòng\n    return msg;\n}\n\nreturn null; // Không có gì để gửi\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1320,
        "wires": [
            [
                "653a2dcb66171ee7",
                "f013d8be62eda6de",
                "3b4ff3a0aa3e1a1b",
                "90dcd4613dba828e"
            ]
        ]
    },
    {
        "id": "f013d8be62eda6de",
        "type": "debug",
        "z": "4789bd7cce04ab75",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1420,
        "wires": []
    },
    {
        "id": "4a87ae145ba138b9",
        "type": "inject",
        "z": "4789bd7cce04ab75",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 470,
        "y": 1600,
        "wires": [
            [
                "2b36a831b3ed372a"
            ]
        ]
    },
    {
        "id": "3c470e07b725fc2c",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lấy dữ liệu",
        "func": "// Hàm format epoch ms -> \"dd/MM/yyyy HH:mm:ss\" theo GMT+7\nfunction formatMsToVN(ms) {\n    const vn = new Date(ms + 7 * 60 * 60 * 1000); // shift UTC -> VN\n    const dd = String(vn.getUTCDate()).padStart(2, '0');\n    const mm = String(vn.getUTCMonth() + 1).padStart(2, '0');\n    const yyyy = vn.getUTCFullYear();\n    const hh = String(vn.getUTCHours()).padStart(2, '0');\n    const mi = String(vn.getUTCMinutes()).padStart(2, '0');\n    const ss = String(vn.getUTCSeconds()).padStart(2, '0');\n    return `${hh}:${mi}:${ss} ${dd}/${mm}/${yyyy}`;\n}\n\n// Danh sách cảm biến cần theo dõi (giữ nguyên nếu bạn đã có)\nlet sensors = [\n    { key: \"temperature\", name: \"Nhiệt độ\", unit: \"°C\" },\n    { key: \"humidity\", name: \"Độ ẩm\", unit: \"%\" },\n    { key: \"gas\", name: \"Khí gas\", unit: \"ppm\" },\n    { key: \"pm\", name: \"Bụi mịn\", unit: \"µg/m³\" }\n];\n\n// Lấy dữ liệu thống kê hiện tại (trong ngày)\nlet changes = flow.get(\"sensorChanges\") || {\n    temperature: { lastValue: null, lastTime: null, changes: [] },\n    humidity: { lastValue: null, lastTime: null, changes: [] },\n    gas: { lastValue: null, lastTime: null, changes: [] },\n    pm: { lastValue: null, lastTime: null, changes: [] },\n    alerts: { temperature: 0, humidity: 0, gas: 0, pm: 0 }\n};\n\n// Xác định loại dữ liệu hiện tại\nlet type = msg.topic; // Ví dụ: \"temperature\", \"humidity\"\nlet value = Number(msg.payload);\n\nif (!changes[type]) {\n    node.warn(`Không xác định loại dữ liệu: ${type}`);\n    return null;\n}\n\nlet sensor = changes[type];\n\n// Lấy thời gian hiện tại chuẩn (epoch ms UTC)\nlet nowMs = Date.now();\nlet nowStr = formatMsToVN(nowMs);\n\n// Nếu giá trị thay đổi so với lần trước\nif (sensor.lastValue === null || sensor.lastValue !== value) {\n    sensor.lastValue = value;\n    sensor.lastTime = nowStr;\n    // lưu cả epoch ms và chuỗi format VN\n    sensor.changes.push({ value: value, timeMs: nowMs, timeStr: nowStr });\n\n    let threshold = flow.get(`pending_${type.charAt(0).toUpperCase() + type.slice(1)}`);\n    if (threshold !== undefined && value > threshold) {\n        changes.alerts[type] += 1;\n    }\n}\n\n// Lưu lại\nchanges[type] = sensor;\nflow.set(\"sensorChanges\", changes);\n\nreturn null;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1420,
        "wires": [
            [
                "888b3baaec6ae09e"
            ]
        ]
    },
    {
        "id": "888b3baaec6ae09e",
        "type": "debug",
        "z": "4789bd7cce04ab75",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1500,
        "wires": []
    },
    {
        "id": "2b36a831b3ed372a",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Tổng hợp",
        "func": "// Lấy dữ liệu đã lưu trong ngày\nlet changes = flow.get(\"sensorChanges\");\nif (!changes) {\n    node.warn(\"Chưa có dữ liệu để báo cáo\");\n    return null;\n}\n\n// Hàm format epoch ms -> \"dd/MM/yyyy HH:mm:ss\" theo GMT+7\nfunction formatMsToVN(ms) {\n    const vn = new Date(ms + 7 * 60 * 60 * 1000); // shift UTC -> VN\n    const dd = String(vn.getUTCDate()).padStart(2, '0');\n    const mm = String(vn.getUTCMonth() + 1).padStart(2, '0');\n    const yyyy = vn.getUTCFullYear();\n    const hh = String(vn.getUTCHours()).padStart(2, '0');\n    const mi = String(vn.getUTCMinutes()).padStart(2, '0');\n    const ss = String(vn.getUTCSeconds()).padStart(2, '0');\n    return `${hh}:${mi}:${ss} ${dd}/${mm}/${yyyy}`;\n}\n// Fallback: parse các chuỗi cũ dạng \"dd/MM/yyyy HH:mm:ss\" -> epoch ms (UTC)\nfunction parseVNStringToMs(s) {\n    if (!s || typeof s !== 'string') return NaN;\n    const m = s.match(/^(\\d{2})\\/(\\d{2})\\/(\\d{4})\\s+(\\d{2}):(\\d{2}):(\\d{2})$/);\n    if (!m) return NaN;\n    const day = Number(m[1]), month = Number(m[2]), year = Number(m[3]);\n    const hh = Number(m[4]), mi = Number(m[5]), ss = Number(m[6]);\n    // VN time -> UTC epoch ms = Date.UTC(... with hour -7)\n    return Date.UTC(year, month - 1, day, hh - 7, mi, ss);\n}\n\n// Danh sách cảm biến\nlet sensors = [\n    { key: \"temperature\", name: \"Nhiệt độ\", unit: \"°C\" },\n    { key: \"humidity\", name: \"Độ ẩm\", unit: \"%\" },\n    { key: \"gas\", name: \"Khí gas\", unit: \"ppm\" },\n    { key: \"pm\", name: \"Bụi mịn\", unit: \"µg/m³\" }\n];\n\nlet reportText = \"BÁO CÁO TỔNG HỢP NGÀY\\n\\n\";\n\n// Tính toán cho từng cảm biến\nsensors.forEach(sensor => {\n    let data = changes[sensor.key]?.changes || [];\n    if (data.length === 0) {\n        reportText += `${sensor.name}: Không có dữ liệu\\n\\n`;\n        return;\n    }\n\n    // Tìm max, min, avg -- dùng giá trị; lưu timeMs tương ứng (fallback parse nếu cần)\n    let maxVal = -Infinity, minVal = Infinity, sum = 0;\n    let maxTimeMs = null, minTimeMs = null;\n\n    data.forEach(d => {\n        const v = Number(d.value);\n        // lấy epoch ms ưu tiên timeMs nếu có, nếu không thử parse timeStr hoặc ISO\n        let tMs = NaN;\n        if (d.timeMs !== undefined) tMs = Number(d.timeMs);\n        else if (typeof d.timeStr === 'string' && d.timeStr.match(/^\\d{2}\\/\\d{2}\\/\\d{4}/)) tMs = parseVNStringToMs(d.timeStr);\n        else if (typeof d.time === 'string' && d.time.includes('T')) tMs = new Date(d.time).getTime();\n\n        if (v > maxVal) {\n            maxVal = v;\n            maxTimeMs = tMs;\n        }\n        if (v < minVal) {\n            minVal = v;\n            minTimeMs = tMs;\n        }\n        sum += v;\n    });\n\n    let avg = (sum / data.length).toFixed(2);\n\n    // Số lần cảnh báo\n    let alertCount = changes.alerts?.[sensor.key] || 0;\n\n    // Format thời gian để hiển thị (nếu không có ms thì in \"Không rõ\")\n    let maxTimeStr = (maxTimeMs || maxTimeMs === 0) ? formatMsToVN(maxTimeMs) : \"Không rõ\";\n    let minTimeStr = (minTimeMs || minTimeMs === 0) ? formatMsToVN(minTimeMs) : \"Không rõ\";\n\n    // Ghi vào báo cáo\n    reportText += `${sensor.name}:\\n`;\n    reportText += `  - Max: ${maxVal}${sensor.unit} (lúc ${maxTimeStr})\\n`;\n    reportText += `  - Min: ${minVal}${sensor.unit} (lúc ${minTimeStr})\\n`;\n    reportText += `  - Avg: ${avg}${sensor.unit}\\n`;\n    reportText += `  - Số lần cảnh báo: ${alertCount}\\n\\n`;\n});\n\n// Lấy email từ các trường hợp khác nhau\nlet email = flow.get(\"email_login\") || flow.get(\"email\") || flow.get(\"email_rs_pass\");\n\n// Nếu không có email thì dừng\nif (!email) {\n    node.warn(\"Không tìm thấy email người nhận\");\n    return null;\n}\n\nmsg.to = email;\nmsg.topic = \"BÁO CÁO TỔNG HỢP TRONG NGÀY\";\nmsg.payload = reportText;\n\n// Reset dữ liệu để bắt đầu ngày mới (nếu vẫn cần)\nflow.set(\"sensorChanges\", {\n    temperature: { lastValue: null, lastTime: null, changes: [] },\n    humidity: { lastValue: null, lastTime: null, changes: [] },\n    gas: { lastValue: null, lastTime: null, changes: [] },\n    pm: { lastValue: null, lastTime: null, changes: [] },\n    alerts: { temperature: 0, humidity: 0, gas: 0, pm: 0 }\n});\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1600,
        "wires": [
            [
                "9c23af117ddba12c",
                "759e06a10b8b8197"
            ]
        ]
    },
    {
        "id": "759e06a10b8b8197",
        "type": "debug",
        "z": "4789bd7cce04ab75",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 1680,
        "wires": []
    },
    {
        "id": "653a2dcb66171ee7",
        "type": "e-mail",
        "z": "4789bd7cce04ab75",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 950,
        "y": 1300,
        "wires": []
    },
    {
        "id": "9c23af117ddba12c",
        "type": "e-mail",
        "z": "4789bd7cce04ab75",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 870,
        "y": 1600,
        "wires": []
    },
    {
        "id": "1efa76f26dd44444",
        "type": "firebase modify",
        "z": "4789bd7cce04ab75",
        "name": "",
        "firebaseconfig": "23b924b292f89500",
        "childpath": "msg.childpath",
        "method": "push",
        "value": "msg.payload",
        "priority": "msg.priority",
        "x": 1540,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "fae1b4343ce63f5f",
        "type": "e-mail",
        "z": "4789bd7cce04ab75",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 2370,
        "y": 140,
        "wires": []
    },
    {
        "id": "54d8153af10dbd2f",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Gửi mã xác nhận",
        "func": "let userEmail = flow.get(\"email\");\n\nlet code = Math.floor(100000 + Math.random() * 900000).toString();\nflow.set(\"verify_code\", code);\n\nmsg.topic = \"Mã xác nhận đăng ký tài khoản\";\nmsg.payload = `Xin chào,\\n\\nMã xác nhận của bạn là: ${code}\\n\\nVui lòng nhập mã này để hoàn tất đăng ký.\\n`;\n\nmsg.to = userEmail;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2150,
        "y": 140,
        "wires": [
            [
                "fae1b4343ce63f5f"
            ]
        ]
    },
    {
        "id": "42f3eb7e9d3b520c",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "check verify code",
        "func": "let code1 = flow.get(\"verify_code\");\nlet code2 = flow.get(\"verify_code_check\");\n\n\nif(code1 === code2){\n    msg = { payload: { \"tab\": \"Mật khẩu mới\" } };\n    return msg;\n}\nreturn code1;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 60,
        "wires": [
            [
                "42b60bfbf5ee6005"
            ]
        ]
    },
    {
        "id": "f41b309f0abab0a9",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lấy mã xác nhận từ input",
        "func": "flow.set(\"verify_code_check\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "ab7f95948b678a44",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lấy thông tin",
        "func": "flow.set(\"email_rs_pass\", msg.payload);\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c81f503bb67dedc8",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Gửi mã xác nhận",
        "func": "let userEmail = flow.get(\"email_rs_pass\");\n\nlet code = Math.floor(100000 + Math.random() * 900000).toString();\nflow.set(\"verify_code_pass\", code);\n\nmsg.topic = \"Mã xác nhận đổi mật khẩu\";\nmsg.payload = `Xin chào,\\n\\nMã xác nhận của bạn là: ${code}\\n\\nVui lòng nhập mã này để đổi mật khẩu mới.\\n`;\n\nmsg.to = userEmail;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 340,
        "wires": [
            [
                "d245fc09df864fc6"
            ]
        ]
    },
    {
        "id": "b61770a152e3e47b",
        "type": "firebase.on",
        "z": "4789bd7cce04ab75",
        "name": "",
        "firebaseconfig": "23b924b292f89500",
        "childpath": "Statistics",
        "atStart": true,
        "eventType": "child_added",
        "queries": [
            {
                "name": "limitToLast",
                "value": "1"
            }
        ],
        "x": 340,
        "y": 1760,
        "wires": [
            [
                "041c66c0da7634e1"
            ]
        ]
    },
    {
        "id": "041c66c0da7634e1",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lấy dữ liệu",
        "func": "/* // Lấy dữ liệu từ msg.payload\nlet data = msg.payload;\n\n// Nếu dữ liệu không hợp lệ\nif (!data || !data.gas || !data.humidity || !data.pm || !data.temperature) {\n    node.warn(\"Dữ liệu không hợp lệ\");\n    return null;\n}\n\n// Chuyển timestamp sang dạng dễ đọc\nlet time = new Date(data.timestamp);\ndata.timeStr = time.toLocaleString(\"vi-VN\", { timeZone: \"Asia/Ho_Chi_Minh\" });\n\nmsg.payload = data;\nreturn msg; */\n\n// Lấy timestamp từ dữ liệu Firebase\nlet dataTime = new Date(msg.payload.timestamp);\nconst firebaseDate = dataTime.toISOString().slice(0, 10);\n\n// Lấy dữ liệu lưu trong flow\nlet storedDate = flow.get('date') || null;\nlet count = flow.get('count') || 0;\nlet avgTemperature = flow.get('avgTemperature') || 0;\nlet avgHumidity = flow.get('avgHumidity') || 0;\nlet avgGas = flow.get('avgGas') || 0;\nlet avgPM = flow.get('avgPM') || 0;\n\n// Lấy thời gian đo trong ngày từ flow (nếu có)\nlet startTimeStr = flow.get('startTime') || null;\nlet endTimeStr = flow.get('endTime') || null;\nlet startTime = startTimeStr ? new Date(startTimeStr) : null;\nlet endTime = endTimeStr ? new Date(endTimeStr) : null;\n\n// Nếu ngày mới trong Firebase → reset và set thời gian bắt đầu đo\nif (storedDate !== firebaseDate) {\n    count = 0;\n    avgTemperature = 0;\n    avgHumidity = 0;\n    avgGas = 0;\n    avgPM = 0;\n    storedDate = firebaseDate;\n\n    startTime = dataTime; // thời gian đo đầu tiên của ngày\n    endTime = dataTime;   // lúc đầu cũng là thời gian kết thúc\n} else {\n    // Nếu chưa có startTime (trường hợp dữ liệu lỗi), gán luôn\n    if (!startTime) startTime = dataTime;\n    // Cập nhật thời gian kết thúc khi có dữ liệu mới trong cùng ngày\n    endTime = dataTime;\n}\n\n// Lấy dữ liệu mới từ Firebase\nconst { temperature, humidity, gas, pm } = msg.payload;\n\nif (\n    typeof temperature === 'number' &&\n    typeof humidity === 'number' &&\n    typeof gas === 'number' &&\n    typeof pm === 'number'\n) {\n    count += 1;\n\n    avgTemperature = (avgTemperature * (count - 1) + temperature) / count;\n    avgHumidity = (avgHumidity * (count - 1) + humidity) / count;\n    avgGas = (avgGas * (count - 1) + gas) / count;\n    avgPM = (avgPM * (count - 1) + pm) / count;\n\n    // Lưu vào flow (lưu string để tránh mất dữ liệu khi restart)\n    flow.set('date', storedDate);\n    flow.set('count', count);\n    flow.set('avgTemperature', avgTemperature);\n    flow.set('avgHumidity', avgHumidity);\n    flow.set('avgGas', avgGas);\n    flow.set('avgPM', avgPM);\n    flow.set('startTime', startTime.toISOString());\n    flow.set('endTime', endTime.toISOString());\n\n    // Format khoảng thời gian đo\n    const timeRange = `${startTime.toLocaleString('vi-VN')} → ${endTime.toLocaleString('vi-VN')}`;\n\n    // Xuất payload\n    msg.payload = {\n        temperature: avgTemperature.toFixed(2),\n        humidity: avgHumidity.toFixed(2),\n        gas: avgGas.toFixed(2),\n        pm: avgPM.toFixed(2),\n        firebaseDate: firebaseDate,\n        timeRange: timeRange\n    };\n} else {\n    msg.payload = { error: \"Dữ liệu đầu vào không hợp lệ\" };\n}\n\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1760,
        "wires": [
            [
                "379ccf1130a0f211"
            ]
        ]
    },
    {
        "id": "379ccf1130a0f211",
        "type": "ui_template",
        "z": "4789bd7cce04ab75",
        "group": "c902f90e6aca1a97",
        "name": "Hiển thị text",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div style=\"text-align: center;\">\n    📊 <b>Báo cáo chất lượng không khí:</b><br>\n    🌡 Nhiệt độ trung bình: {{msg.payload.temperature}} °C<br>\n    💧 Độ ẩm trung bình: {{msg.payload.humidity}} %<br>\n    🌫 Bụi mịn trung bình: {{msg.payload.pm}} µg/m³<br>\n    🛢 Khí Gas trung bình: {{msg.payload.gas}} ppm<br>\n    🕒 Thời gian đo: {{msg.payload.timeRange}}\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "3c03d45d17e6bcfa",
        "type": "firebase.once",
        "z": "4789bd7cce04ab75",
        "name": "",
        "firebaseconfig": "23b924b292f89500",
        "childpath": "Statistics",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [],
        "x": 530,
        "y": 1920,
        "wires": [
            [
                "580ccc26d7cd66b5",
                "7452a3fb5e46281a",
                "92261fbf903ea885",
                "b3dc6ab0b7bf89bb"
            ]
        ]
    },
    {
        "id": "580ccc26d7cd66b5",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lấy ngày",
        "func": "let dataObj = msg.payload; // dữ liệu từ firebase node trả về (object)\nlet data = Object.keys(dataObj).map(k => dataObj[k]); // chuyển thành mảng\n\nlet minDate = data.reduce((min, row) => {\n    let d = new Date(row.timestamp);\n    return d < min ? d : min;\n}, new Date(data[0].timestamp));\n\nlet maxDate = data.reduce((max, row) => {\n    let d = new Date(row.timestamp);\n    return d > max ? d : max;\n}, new Date(data[0].timestamp));\n\nreturn [\n    {\n        payload: minDate.toISOString().slice(0, 10),\n        topic: \"start_date\"\n    },\n    {\n        payload: maxDate.toISOString().slice(0, 10),\n        topic: \"end_date\"\n    }\n];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1860,
        "wires": [
            [
                "0f770f2deef8b929"
            ],
            [
                "b6b2616100adb257"
            ]
        ]
    },
    {
        "id": "7452a3fb5e46281a",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lấy dữ liệu",
        "func": "let rawData = msg.payload || {};\nlet dataArray = Object.values(rawData);  // Lấy mảng các giá trị object con\n\nflow.set(\"allData\", dataArray);\nmsg.payload = flow.get(\"allData\");\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1940,
        "wires": [
            [
                "030e0e1094bf86f6"
            ]
        ]
    },
    {
        "id": "92261fbf903ea885",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lây dữ liệu nhiệt độ, độ ẩm",
        "func": "let data = msg.payload; // Dữ liệu từ node firebase trả về\n\nlet dailyData = {};\n\nfor (let key in data) {\n    let entry = data[key];\n    let temp = Number(entry.temperature);\n    let humi = Number(entry.humidity);\n    let dateStr = new Date(entry.timestamp).toISOString().split(\"T\")[0];\n\n    if (!isNaN(temp) && !isNaN(humi)) {\n        if (!dailyData[dateStr]) {\n            dailyData[dateStr] = { tempSum: 0, humiSum: 0, count: 0 };\n        }\n        dailyData[dateStr].tempSum += temp;\n        dailyData[dateStr].humiSum += humi;\n        dailyData[dateStr].count += 1;\n    }\n}\n\nlet temperature = [];\nlet humidity = [];\nlet labels = [];\n\nfor (let date in dailyData) {\n    let avgTemp = dailyData[date].tempSum / dailyData[date].count;\n    let avgHumi = dailyData[date].humiSum / dailyData[date].count;\n    temperature.push(avgTemp);\n    humidity.push(avgHumi);\n    labels.push(date);\n}\n\nmsg.payload = [\n    {\n        series: [\"Average Temperature\", \"Average Humidity\"],\n        data: [temperature, humidity],\n        labels: labels\n    }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 2000,
        "wires": [
            [
                "9f2758034aad6bac"
            ]
        ]
    },
    {
        "id": "b3dc6ab0b7bf89bb",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lấy dữ liệu gas, pm",
        "func": "let data = msg.payload; // dữ liệu từ Firebase node trả về\n\nlet dailyData = {};\n\n// Gom nhóm dữ liệu theo ngày và tính trung bình\nfor (let key in data) {\n    let entry = data[key];\n    let gas = Number(entry.gas);\n    let pm = Number(entry.pm);\n    let dateStr = new Date(entry.timestamp).toISOString().split(\"T\")[0];\n\n    if (!isNaN(gas) && !isNaN(pm)) {\n        if (!dailyData[dateStr]) {\n            dailyData[dateStr] = { gasSum: 0, pmSum: 0, count: 0 };\n        }\n        dailyData[dateStr].gasSum += gas;\n        dailyData[dateStr].pmSum += pm;\n        dailyData[dateStr].count += 1;\n    }\n}\n\n// Chuyển sang mảng để dễ sắp xếp theo ngày\nlet dailyArray = Object.keys(dailyData).map(date => ({\n    date: date,\n    avgGas: dailyData[date].gasSum / dailyData[date].count,\n    avgPM: dailyData[date].pmSum / dailyData[date].count\n}));\n\n// Sắp xếp theo ngày tăng dần\ndailyArray.sort(function (a, b) {\n    return new Date(a.date).getTime() - new Date(b.date).getTime();\n});\n// Chỉ lấy N ngày gần nhất\nlet N = 7; // số ngày muốn hiển thị\nlet recentData = dailyArray.slice(-N);\n\nlet gasArray = [];\nlet pmArray = [];\nlet labels = [];\n\nrecentData.forEach(item => {\n    gasArray.push(item.avgGas);\n    pmArray.push(item.avgPM);\n    labels.push(item.date);\n});\n\nmsg.payload = [\n    {\n        series: [\"Gas\", \"PM\"],\n        data: [gasArray, pmArray],\n        labels: labels\n    }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2060,
        "wires": [
            [
                "5dcfb6afe3c28c03"
            ]
        ]
    },
    {
        "id": "9f2758034aad6bac",
        "type": "ui_chart",
        "z": "4789bd7cce04ab75",
        "name": "",
        "group": "c902f90e6aca1a97",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Môi trường",
        "chartType": "line",
        "legend": "true",
        "xformat": "Y-M-D",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#b31e1e",
            "#001beb",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1910,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "0f770f2deef8b929",
        "type": "ui_date_picker",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Từ",
        "group": "c902f90e6aca1a97",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "topic": "start_date",
        "topicType": "msg",
        "className": "",
        "x": 1150,
        "y": 1820,
        "wires": [
            [
                "da596c251731b7ab",
                "a91e8c5dfffea60d"
            ]
        ]
    },
    {
        "id": "b6b2616100adb257",
        "type": "ui_date_picker",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Đến ",
        "group": "c902f90e6aca1a97",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": true,
        "topic": "end_date",
        "topicType": "msg",
        "className": "",
        "x": 1150,
        "y": 1880,
        "wires": [
            [
                "7688cd901a90fdeb"
            ]
        ]
    },
    {
        "id": "86146303fb6a1326",
        "type": "ui_button",
        "z": "4789bd7cce04ab75",
        "name": "",
        "group": "c902f90e6aca1a97",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "LỌC",
        "tooltip": "",
        "color": "",
        "bgcolor": "Blue",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 1490,
        "y": 1920,
        "wires": [
            [
                "4ff0dae4ad5d2853"
            ]
        ]
    },
    {
        "id": "5dcfb6afe3c28c03",
        "type": "ui_chart",
        "z": "4789bd7cce04ab75",
        "name": "",
        "group": "c902f90e6aca1a97",
        "order": 7,
        "width": 0,
        "height": 0,
        "label": "Chất lượng không khí",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff7b00",
            "#e9afaf",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1900,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "da596c251731b7ab",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lấy ngày BD",
        "func": "flow.set(msg.topic, msg.payload);  // topic = start_date hoặc end_date\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1820,
        "wires": [
            [
                "7311bd5d96fe35c3"
            ]
        ]
    },
    {
        "id": "7688cd901a90fdeb",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lấy ngày KT",
        "func": "flow.set(msg.topic, msg.payload);  // topic = start_date hoặc end_date\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "4ff0dae4ad5d2853",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lọc dữ liệu",
        "func": "let data = flow.get(\"allData\") || [];\n\nlet start = flow.get(\"start_date\");\nlet end = flow.get(\"end_date\");\n\nif (start == null || end == null) {\n    node.warn(\"Chưa chọn ngày bắt đầu hoặc kết thúc\");\n    return null;\n}\n\n// Chuyển end thành cuối ngày để lọc đủ\nlet endDate = new Date(end);\nendDate.setHours(23, 59, 59, 999);\nlet endTimestamp = endDate.getTime();\n\n// Chuyển start sang timestamp\nlet startTimestamp = Number(start);\n\n// Lọc theo trường timestamp\nlet filtered = data.filter(row => {\n    let t = new Date(row.timestamp).getTime();\n    return t >= startTimestamp && t <= endTimestamp;\n});\n\n// Nếu không có dữ liệu thì trả về mảng rỗng cho chart\nif (filtered.length === 0) {\n    msg.payload = [\n        {\n            series: [\"Temperature\", \"Humidity\"],\n            data: [[], []],\n            labels: []\n        }\n    ];\n    return msg;\n}\n\n// Nhóm theo ngày và tính trung bình từng ngày\n// Tạo một object để lưu trung bình theo ngày\nlet grouped = {};\n\nfiltered.forEach(row => {\n    let day = row.timestamp.substring(0, 10); // lấy YYYY-MM-DD\n    if (!grouped[day]) {\n        grouped[day] = { tempSum: 0, tempCount: 0, humiSum: 0, humiCount: 0 };\n    }\n    let temp = Number(row.temperature);\n    if (!isNaN(temp)) {\n        grouped[day].tempSum += temp;\n        grouped[day].tempCount++;\n    }\n    let humi = Number(row.humidity);\n    if (!isNaN(humi)) {\n        grouped[day].humiSum += humi;\n        grouped[day].humiCount++;\n    }\n});\n\n// Chuẩn bị dữ liệu cho chart\nlet labels = Object.keys(grouped).sort(); // ngày tăng dần\nlet avgTemps = [];\nlet avgHumis = [];\n\nlabels.forEach(day => {\n    let g = grouped[day];\n    avgTemps.push(g.tempCount ? parseFloat((g.tempSum / g.tempCount).toFixed(2)) : 0);\n    avgHumis.push(g.humiCount ? parseFloat((g.humiSum / g.humiCount).toFixed(2)) : 0);\n});\n\nmsg.payload = [\n    {\n        series: [\"Average Temperature\", \"Average Humidity\"],\n        data: [avgTemps, avgHumis],\n        labels: labels\n    }\n];\nmsg.ui_control = {\n    options: {\n        elements: {\n            line: {\n                fill: false\n            },\n            point: {\n                radius: 4,\n                hoverRadius: 6\n            }\n        }\n    }\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 1920,
        "wires": [
            [
                "716c43b2f9a74ab1",
                "9f2758034aad6bac"
            ]
        ]
    },
    {
        "id": "716c43b2f9a74ab1",
        "type": "debug",
        "z": "4789bd7cce04ab75",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1900,
        "y": 1840,
        "wires": []
    },
    {
        "id": "a91e8c5dfffea60d",
        "type": "debug",
        "z": "4789bd7cce04ab75",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 1760,
        "wires": []
    },
    {
        "id": "7311bd5d96fe35c3",
        "type": "debug",
        "z": "4789bd7cce04ab75",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 1820,
        "wires": []
    },
    {
        "id": "030e0e1094bf86f6",
        "type": "debug",
        "z": "4789bd7cce04ab75",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 1940,
        "wires": []
    },
    {
        "id": "41985c4bddf675db",
        "type": "ui_text_input",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Mã xác nhận - Quên mật khẩu",
        "tooltip": "",
        "group": "f0f84895977cfd6f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1730,
        "y": 280,
        "wires": [
            [
                "6709212138118443"
            ]
        ]
    },
    {
        "id": "246c42102a62c472",
        "type": "ui_text_input",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Mật khẩu",
        "tooltip": "",
        "group": "2cca8e299216fbbb",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": 300,
        "topic": "pass1",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1660,
        "y": 380,
        "wires": [
            [
                "f57839bbb2374712"
            ]
        ]
    },
    {
        "id": "e3c80e83460409b3",
        "type": "ui_text_input",
        "z": "4789bd7cce04ab75",
        "name": "",
        "label": "Xác nhận mật khẩu",
        "tooltip": "",
        "group": "2cca8e299216fbbb",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": 300,
        "topic": "pass2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1630,
        "y": 420,
        "wires": [
            [
                "f57839bbb2374712"
            ]
        ]
    },
    {
        "id": "ec72c4a12a6d82df",
        "type": "ui_button",
        "z": "4789bd7cce04ab75",
        "name": "Xác nhận đổi mật khẩu",
        "group": "2cca8e299216fbbb",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Xác nhận",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "#",
        "className": "",
        "icon": "confirm",
        "payload": "{\"tab\":\"Trang chủ\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 540,
        "wires": [
            [
                "63e493808c0b7b2e"
            ]
        ]
    },
    {
        "id": "a5368ad1d08e7905",
        "type": "ui_ui_control",
        "z": "4789bd7cce04ab75",
        "name": "Switch Tab",
        "events": "all",
        "x": 610,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "e14c1427cc863964",
        "type": "ui_button",
        "z": "4789bd7cce04ab75",
        "name": "Xác nhận mã xác nhận",
        "group": "f0f84895977cfd6f",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Tiếp tục",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "#",
        "className": "",
        "icon": "confirm",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 1760,
        "y": 320,
        "wires": [
            [
                "fe7acbf677496c14"
            ]
        ]
    },
    {
        "id": "6d6ab98ffc384dde",
        "type": "ui_ui_control",
        "z": "4789bd7cce04ab75",
        "name": "Switch Tab",
        "events": "all",
        "x": 2250,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "f57839bbb2374712",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lưu password mới",
        "func": "if (msg.topic === \"pass1\") {\n    flow.set(\"rs_pass1\", msg.payload);\n}\nif (msg.topic === \"pass2\") {\n    flow.set(\"rs_pass2\", msg.payload);\n}\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "63e493808c0b7b2e",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Tạo password",
        "func": "let p1 = flow.get(\"rs_pass1\");\nlet p2 = flow.get(\"rs_pass2\");\n\nlet out1 = null;\nlet out2 = null;\n\nif (p1 !== undefined && p2 !== undefined) {\n    if (p1 === p2) {\n\n        let email = flow.get(\"email_rs_pass\");\n        let password = p1;\n\n        out1 = {\n            topic: \"UPDATE users SET password = ? WHERE email = ?\",\n            payload: [password, email]\n        };\n        out2 = { payload: { tab: \"Trang chủ\" } };\n    } else {\n        return [null, null];\n    }\n}\n\nreturn [out1, out2];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 540,
        "wires": [
            [
                "4a55738bf742f704"
            ],
            [
                "a5368ad1d08e7905"
            ]
        ]
    },
    {
        "id": "4a55738bf742f704",
        "type": "mysql",
        "z": "4789bd7cce04ab75",
        "mydb": "dbef2de882ccf871",
        "name": "",
        "x": 610,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "fe7acbf677496c14",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "check verify code",
        "func": "let code1 = flow.get(\"verify_code_pass\");\nlet code2 = flow.get(\"verify_code_pass_check\");\n\n\nif(code1 === code2){\n    msg = { payload: { \"tab\": \"Đổi mật khẩu\" } };\n    return msg;\n}\nreturn code1;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 320,
        "wires": [
            [
                "6d6ab98ffc384dde"
            ]
        ]
    },
    {
        "id": "6709212138118443",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Lấy mã xác nhận từ input",
        "func": "flow.set(\"verify_code_pass_check\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "d245fc09df864fc6",
        "type": "e-mail",
        "z": "4789bd7cce04ab75",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1490,
        "y": 340,
        "wires": []
    },
    {
        "id": "4f0218f7d1803d5f",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Tạo selection",
        "func": "var  opts = {\n    reply_markup: JSON.stringify({\n        \"inline_keyboard\":[[\n            {\n                \"text\": \"Temperature\",\n                \"callback_data\": \"1\"\n            },\n            {\n                \"text\": \"Humidity\",\n                \"callback_data\": \"2\"\n            },\n            {\n                \"text\": \"Gas\",\n                \"callback_data\": \"3\"\n            },\n            {\n                \"text\": \"PM\",\n                \"callback_data\": \"4\"\n            }]\n        ]\n    })\n};\nmsg.error = false;\nmsg.payload.content = 'Selection?';\nmsg.payload.options = opts;\nmsg.payload.type = \"message\"\nreturn [msg];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 2180,
        "wires": [
            [
                "b6f633e794b6ee48"
            ]
        ]
    },
    {
        "id": "2a10cdc19befa855",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Reply",
        "func": "let data = msg.payload.content;\n\nlet reply = \"\";\nif (data === \"1\") reply = \"Temperature: \" + (flow.get(\"temperature\") || 0) + \" °C\";\nif (data === \"2\") reply = \"Humidity: \" + (flow.get(\"humidity\") || 0) + \" %\";\nif (data === \"3\") reply = \"Gas: \" + (flow.get(\"gas\") || 0) + \" ppm\";\nif (data === \"4\") reply = \"PM: \" + (flow.get(\"pm\") || 0) + \" µg/m³\";\n\nmsg.payload = {\n    chatId: msg.payload.chatId,\n    type: \"message\",\n    content: reply\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 2300,
        "wires": [
            [
                "5bf6509e8e1ca2c2"
            ]
        ]
    },
    {
        "id": "31784891f3a00a38",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Tạo selection",
        "func": "var opts = {\n    reply_markup: JSON.stringify({\n        \"inline_keyboard\": [[\n            {\n                \"text\": \"Temperature\",\n                \"callback_data\": \"Temperature\"\n            },\n            {\n                \"text\": \"Humidity\",\n                \"callback_data\": \"Humidity\"\n            },\n            {\n                \"text\": \"Gas\",\n                \"callback_data\": \"Gas\"\n            },\n            {\n                \"text\": \"PM\",\n                \"callback_data\": \"PM\"\n            }]\n        ]\n    })\n};\nmsg.error = false;\nmsg.payload.content = 'Selection?';\nmsg.payload.options = opts;\nmsg.payload.type = \"message\"\nreturn [msg];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 640,
        "wires": [
            [
                "1601216acb70434a"
            ]
        ]
    },
    {
        "id": "8079361c14aee22e",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Reply",
        "func": "let data = msg.payload.content;\n\nif (data === \"Temperature\") {\n    flow.set(\"threshold_type\", data);\n    msg.payload.content = `Nhập giá trị threshold cho Temperature sensor (°C):`;\n}\nelse if (data === \"Humidity\") {\n    flow.set(\"threshold_type\", data);\n    msg.payload.content = `Nhập giá trị threshold cho Humidity sensor (%):`;\n}\nelse if (data === \"Gas\") {\n    flow.set(\"threshold_type\", data);\n    msg.payload.content = `Nhập giá trị threshold cho Gas sensor (ppm):`;\n}\nelse if (data === \"PM\") {\n    flow.set(\"threshold_type\", data);\n    msg.payload.content = `Nhập giá trị threshold cho PM sensor (µg/m³):`;\n}\nelse {\n    return null;\n}\n\nmsg.payload = {\n    chatId: msg.payload.chatId,\n    type: \"message\",\n    content: msg.payload.content\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 720,
        "wires": [
            [
                "1d0338eb6f6d42b1"
            ]
        ]
    },
    {
        "id": "bb5cc8165278070a",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "Nhận giá trị threshold",
        "func": "let type = flow.get(\"threshold_type\");\nlet value = Number(msg.payload.content);\n\nlet outTelegram = null;\nlet outTemp = null;\nlet outHum = null;\nlet outGas = null;\nlet outPM = null;\n\nif (!isNaN(value)) {\n    if (type === \"Temperature\") {\n        outTemp = { payload: value };\n    }\n    if (type === \"Humidity\") {\n        outHum = { payload: value };\n    }\n    if (type === \"Gas\") {\n        outGas = { payload: value };\n    }\n    if (type === \"PM\") {\n        outPM = { payload: value };\n    }\n    outTelegram = {\n        payload: {\n            chatId: msg.payload.chatId,\n            type: \"message\",\n            content: `Đã đặt threshold ${type} = ${value}`\n        }\n    };\n}\nreturn [outTelegram, outTemp, outHum, outGas, outPM];",
        "outputs": 5,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 860,
        "wires": [
            [
                "cab95e2b30a19531"
            ],
            [
                "0ef9c9f4da5cf1bb"
            ],
            [
                "69e7ce7444b34cc8"
            ],
            [
                "72bfd5c3bdfc517a"
            ],
            [
                "a2fbec245cf5eb95"
            ]
        ]
    },
    {
        "id": "16e28cf9ef39f476",
        "type": "telegram receiver",
        "z": "4789bd7cce04ab75",
        "name": "",
        "bot": "a0c3702afa3195de",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 130,
        "y": 860,
        "wires": [
            [
                "bb5cc8165278070a"
            ],
            []
        ]
    },
    {
        "id": "47dd5f98bcf01bbe",
        "type": "telegram command",
        "z": "4789bd7cce04ab75",
        "name": "",
        "command": "/data",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "a0c3702afa3195de",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 630,
        "y": 2180,
        "wires": [
            [
                "4f0218f7d1803d5f"
            ],
            []
        ]
    },
    {
        "id": "844df56100556dad",
        "type": "telegram command",
        "z": "4789bd7cce04ab75",
        "name": "",
        "command": "/setThreshold",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "a0c3702afa3195de",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 110,
        "y": 640,
        "wires": [
            [
                "31784891f3a00a38"
            ],
            []
        ]
    },
    {
        "id": "2c19bcfab1e028f7",
        "type": "telegram event",
        "z": "4789bd7cce04ab75",
        "name": "",
        "bot": "a0c3702afa3195de",
        "event": "callback_query",
        "autoanswer": false,
        "x": 640,
        "y": 2300,
        "wires": [
            [
                "2a10cdc19befa855"
            ]
        ]
    },
    {
        "id": "0df5e34188a160cd",
        "type": "telegram event",
        "z": "4789bd7cce04ab75",
        "name": "",
        "bot": "a0c3702afa3195de",
        "event": "callback_query",
        "autoanswer": false,
        "x": 120,
        "y": 720,
        "wires": [
            [
                "8079361c14aee22e"
            ]
        ]
    },
    {
        "id": "b6f633e794b6ee48",
        "type": "telegram sender",
        "z": "4789bd7cce04ab75",
        "name": "",
        "bot": "a0c3702afa3195de",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1150,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "5bf6509e8e1ca2c2",
        "type": "telegram sender",
        "z": "4789bd7cce04ab75",
        "name": "",
        "bot": "a0c3702afa3195de",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1130,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "1601216acb70434a",
        "type": "telegram sender",
        "z": "4789bd7cce04ab75",
        "name": "",
        "bot": "a0c3702afa3195de",
        "haserroroutput": false,
        "outputs": 1,
        "x": 630,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "1d0338eb6f6d42b1",
        "type": "telegram sender",
        "z": "4789bd7cce04ab75",
        "name": "",
        "bot": "a0c3702afa3195de",
        "haserroroutput": false,
        "outputs": 1,
        "x": 630,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "cab95e2b30a19531",
        "type": "telegram sender",
        "z": "4789bd7cce04ab75",
        "name": "",
        "bot": "a0c3702afa3195de",
        "haserroroutput": false,
        "outputs": 1,
        "x": 950,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "90dcd4613dba828e",
        "type": "http request",
        "z": "4789bd7cce04ab75",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.pushsafer.com/api?k=5ijW23zKAYIs0CeoOFNf&m={{payload}}&t={{topic}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 970,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "3b4ff3a0aa3e1a1b",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "chuẩn bị gửi alert trên cloud",
        "func": "msg.childpath = \"History\";\nmsg.payload = {\n    alert: msg.payload,\n    timestamp: new Date().toISOString()\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1380,
        "wires": [
            [
                "5828b9b4bd7336a9"
            ]
        ]
    },
    {
        "id": "5828b9b4bd7336a9",
        "type": "firebase modify",
        "z": "4789bd7cce04ab75",
        "name": "",
        "firebaseconfig": "23b924b292f89500",
        "childpath": "msg.childpath",
        "method": "push",
        "value": "msg.payload",
        "priority": "msg.priority",
        "x": 1540,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "2a664bb0382de073",
        "type": "firebase.on",
        "z": "4789bd7cce04ab75",
        "name": "",
        "firebaseconfig": "23b924b292f89500",
        "childpath": "History",
        "atStart": true,
        "eventType": "value",
        "queries": [],
        "x": 1250,
        "y": 1100,
        "wires": [
            [
                "fc66b361faaa8a77",
                "90fe47e8f45cfdb3"
            ]
        ]
    },
    {
        "id": "fc66b361faaa8a77",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "chuẩn bị hiện lịch sử hoạt động",
        "func": "let dataObj = msg.payload; // dữ liệu từ firebase node trả về (object)\nlet data = Object.keys(dataObj).map(k => {\n    let item = dataObj[k];\n    if (item.timestamp) {\n        item.timestamp = new Date(item.timestamp).toLocaleString(\"vi-VN\", { timeZone: \"Asia/Ho_Chi_Minh\" });\n    }\n    return item;\n}); // chuyển thành mảng\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 1100,
        "wires": [
            [
                "c307709f9ed7c161"
            ]
        ]
    },
    {
        "id": "c307709f9ed7c161",
        "type": "ui_table",
        "z": "4789bd7cce04ab75",
        "group": "4ffc6ab462b6373d",
        "name": "",
        "order": 0,
        "width": "26",
        "height": "8",
        "columns": [
            {
                "field": "alert",
                "title": "Tên cảnh báo",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "timestamp",
                "title": "Thời gian cảnh báo",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1990,
        "y": 1100,
        "wires": []
    },
    {
        "id": "91fe1baad026c251",
        "type": "firebase modify",
        "z": "4789bd7cce04ab75",
        "name": "",
        "firebaseconfig": "23b924b292f89500",
        "childpath": "Threshold",
        "method": "update",
        "value": "msg.payload",
        "priority": "msg.priority",
        "x": 1850,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "5c8afc4c14d3705b",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "lấy giá trị threshold về database",
        "func": "if(msg.payload == \"change\") return msg;\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 400,
        "wires": [
            [
                "343acb69be4e0f71"
            ]
        ]
    },
    {
        "id": "343acb69be4e0f71",
        "type": "firebase.once",
        "z": "4789bd7cce04ab75",
        "name": "",
        "firebaseconfig": "23b924b292f89500",
        "childpath": "Threshold",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [],
        "x": 1050,
        "y": 460,
        "wires": [
            [
                "604724564c03726e",
                "839284f9355f829f"
            ]
        ]
    },
    {
        "id": "604724564c03726e",
        "type": "debug",
        "z": "4789bd7cce04ab75",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 480,
        "wires": []
    },
    {
        "id": "6fb2fb7e51cf1780",
        "type": "ui_ui_control",
        "z": "4789bd7cce04ab75",
        "name": "Switch Tab",
        "events": "all",
        "x": 610,
        "y": 380,
        "wires": [
            [
                "5c8afc4c14d3705b"
            ]
        ]
    },
    {
        "id": "839284f9355f829f",
        "type": "function",
        "z": "4789bd7cce04ab75",
        "name": "update threshold",
        "func": "let tempThreshold = \n{payload: msg.payload.temperature_threshold};\nlet humThreshold = {payload: msg.payload.humidity_threshold};\nlet gasThreshold = {payload: msg.payload.gas_threshold};\nlet pmThreshold = {payload: msg.payload.pm_threshold};\nreturn [tempThreshold, humThreshold, gasThreshold, pmThreshold];",
        "outputs": 4,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "0ef9c9f4da5cf1bb"
            ],
            [
                "69e7ce7444b34cc8"
            ],
            [
                "72bfd5c3bdfc517a"
            ],
            [
                "a2fbec245cf5eb95"
            ]
        ]
    },
    {
        "id": "90fe47e8f45cfdb3",
        "type": "debug",
        "z": "4789bd7cce04ab75",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 1020,
        "wires": []
    }
]