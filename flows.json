[
    {
        "id": "2219b06636009d6c",
        "type": "tab",
        "label": "Flow 5",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a523b338c8b1b77e",
        "type": "ui_button",
        "z": "2219b06636009d6c",
        "name": "Login Button",
        "group": "login_group",
        "order": 4,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Đăng nhập",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "#",
        "className": "",
        "icon": "login",
        "payload": "{\"tab\":\"Trang chủ\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 990,
        "y": 360,
        "wires": [
            [
                "1d58f796f86a71ad",
                "b0f115c029f32eae"
            ]
        ]
    },
    {
        "id": "b0f115c029f32eae",
        "type": "ui_ui_control",
        "z": "2219b06636009d6c",
        "name": "Switch Tab",
        "events": "all",
        "x": 1390,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d9c1c4b943e09528",
        "type": "ui_text_input",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Email",
        "tooltip": "",
        "group": "login_group",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Email",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 230,
        "y": 240,
        "wires": [
            [
                "b1e88d5c5b34d6b0"
            ]
        ]
    },
    {
        "id": "c1b76c40ddf810eb",
        "type": "ui_text_input",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Mật khẩu",
        "tooltip": "",
        "group": "login_group",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": 300,
        "topic": "Password",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 240,
        "y": 300,
        "wires": [
            [
                "b1e88d5c5b34d6b0"
            ]
        ]
    },
    {
        "id": "7585480df9e4bf35",
        "type": "ui_gauge",
        "z": "2219b06636009d6c",
        "name": "",
        "group": "2479d9c11390cb6d",
        "order": 1,
        "width": 7,
        "height": 9,
        "gtype": "wave",
        "title": "Độ ẩm",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 370,
        "y": 1180,
        "wires": []
    },
    {
        "id": "768c03cd242d262b",
        "type": "ui_gauge",
        "z": "2219b06636009d6c",
        "name": "",
        "group": "bc2745e9261eecb8",
        "order": 1,
        "width": 7,
        "height": 9,
        "gtype": "gage",
        "title": "Bụi mịn",
        "label": "µg/m³",
        "format": "{{value}}",
        "min": "0",
        "max": "500",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 380,
        "y": 1300,
        "wires": []
    },
    {
        "id": "b182eb4faabecfaf",
        "type": "ui_gauge",
        "z": "2219b06636009d6c",
        "name": "",
        "group": "2479d9c11390cb6d",
        "order": 4,
        "width": 7,
        "height": 9,
        "gtype": "gage",
        "title": "Nhiệt độ",
        "label": "℃ ",
        "format": "{{value}}",
        "min": "-40",
        "max": "80",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 380,
        "y": 1060,
        "wires": []
    },
    {
        "id": "3b5dcedfabcc0ccd",
        "type": "ui_slider",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Nhiệt độ",
        "tooltip": "",
        "group": "8841171fe2e5f73f",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "Temperature",
        "topicType": "str",
        "min": "-40",
        "max": "80",
        "step": 1,
        "className": "",
        "x": 940,
        "y": 720,
        "wires": [
            [
                "4bfd26df9a513a08",
                "d01bd68dd48cd5be",
                "9f352d85e784f23a"
            ]
        ]
    },
    {
        "id": "83219d67e9819d1b",
        "type": "ui_slider",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Khí gas",
        "tooltip": "",
        "group": "8841171fe2e5f73f",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "Gas",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 940,
        "y": 880,
        "wires": [
            [
                "742bc77f419cb3fb",
                "43e86130f3db8a5f",
                "9f352d85e784f23a"
            ]
        ]
    },
    {
        "id": "2510ab59b1cc961e",
        "type": "ui_slider",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Bụi mịn",
        "tooltip": "",
        "group": "8841171fe2e5f73f",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "PM",
        "topicType": "str",
        "min": 0,
        "max": "500",
        "step": 1,
        "className": "",
        "x": 940,
        "y": 960,
        "wires": [
            [
                "2da2f5ce53949b3b",
                "9167fcfb860c9669",
                "9f352d85e784f23a"
            ]
        ]
    },
    {
        "id": "4bce23342dc8e5df",
        "type": "ui_slider",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Độ ẩm",
        "tooltip": "",
        "group": "8841171fe2e5f73f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "Humidity",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 930,
        "y": 640,
        "wires": [
            [
                "9be5a4a85de65f3c",
                "3c8f33a63e018812",
                "9f352d85e784f23a"
            ]
        ]
    },
    {
        "id": "4bfd26df9a513a08",
        "type": "ui_text",
        "z": "2219b06636009d6c",
        "group": "8841171fe2e5f73f",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Giá trị:",
        "format": "{{msg.payload}}°C",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "Arial Black,Arial Black,Gadget,sans-serif",
        "fontSize": 16,
        "color": "#f4230b",
        "x": 1270,
        "y": 720,
        "wires": []
    },
    {
        "id": "9be5a4a85de65f3c",
        "type": "ui_text",
        "z": "2219b06636009d6c",
        "group": "8841171fe2e5f73f",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Giá trị:",
        "format": "{{msg.payload}}%",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "Arial Black,Arial Black,Gadget,sans-serif",
        "fontSize": 16,
        "color": "#f4230b",
        "x": 1270,
        "y": 640,
        "wires": []
    },
    {
        "id": "742bc77f419cb3fb",
        "type": "ui_text",
        "z": "2219b06636009d6c",
        "group": "8841171fe2e5f73f",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Giá trị:",
        "format": "{{msg.payload}}ppm",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "Arial Black,Arial Black,Gadget,sans-serif",
        "fontSize": 16,
        "color": "#f4230b",
        "x": 1270,
        "y": 880,
        "wires": []
    },
    {
        "id": "2da2f5ce53949b3b",
        "type": "ui_text",
        "z": "2219b06636009d6c",
        "group": "8841171fe2e5f73f",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Giá trị:",
        "format": "{{msg.payload}}µg/m³",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "Arial Black,Arial Black,Gadget,sans-serif",
        "fontSize": 16,
        "color": "#f4230b",
        "x": 1270,
        "y": 960,
        "wires": []
    },
    {
        "id": "15b46af67466c2c8",
        "type": "ui_switch",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Relay",
        "tooltip": "",
        "group": "8841171fe2e5f73f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 930,
        "y": 1020,
        "wires": [
            [
                "04a19e29f0a32259"
            ]
        ]
    },
    {
        "id": "d0407c2de269d079",
        "type": "ui_switch",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Buzzer",
        "tooltip": "",
        "group": "8841171fe2e5f73f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 400,
        "y": 1000,
        "wires": [
            [
                "9a51f5fbdf77c64d",
                "6f5a04eb5ce9acb5"
            ]
        ]
    },
    {
        "id": "9ce29c6a6a698da7",
        "type": "ui_text_input",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Email",
        "tooltip": "",
        "group": "72aa82b9e770af92",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "email",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1890,
        "y": 300,
        "wires": [
            [
                "120a8ceea9790283"
            ]
        ]
    },
    {
        "id": "56e23cddedbeb438",
        "type": "ui_button",
        "z": "2219b06636009d6c",
        "name": "Login Button",
        "group": "login_group",
        "order": 10,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Quên mật khẩu?",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "{\"tab\":\"Quên mật khẩu\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 990,
        "y": 440,
        "wires": [
            [
                "b0f115c029f32eae"
            ]
        ]
    },
    {
        "id": "dc89c7898ba8bc58",
        "type": "ui_text_input",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Mã xác nhận",
        "tooltip": "",
        "group": "fd48b2edfc8db74c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 510,
        "y": 20,
        "wires": [
            [
                "6368aad242793e9d"
            ]
        ]
    },
    {
        "id": "e1195195a9387bde",
        "type": "ui_button",
        "z": "2219b06636009d6c",
        "name": "Quên pass Button",
        "group": "72aa82b9e770af92",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Tiếp tục",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "#",
        "className": "",
        "icon": "confirm",
        "payload": "{\"tab\":\"Xác nhận - Quên mật khẩu\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1930,
        "y": 360,
        "wires": [
            [
                "40f266f76070ab3a",
                "a05de9208fed0624"
            ]
        ]
    },
    {
        "id": "eba3e04c479d3335",
        "type": "ui_text_input",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Mật khẩu",
        "tooltip": "",
        "group": "c57aef7b9edd92a0",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": 300,
        "topic": "pass1",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 260,
        "y": 120,
        "wires": [
            [
                "364753ec7b69bd38"
            ]
        ]
    },
    {
        "id": "54007cd97c4fe6a2",
        "type": "ui_text_input",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Xác nhận mật khẩu",
        "tooltip": "",
        "group": "c57aef7b9edd92a0",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": 300,
        "topic": "pass2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 230,
        "y": 160,
        "wires": [
            [
                "364753ec7b69bd38"
            ]
        ]
    },
    {
        "id": "a05de9208fed0624",
        "type": "ui_ui_control",
        "z": "2219b06636009d6c",
        "name": "Switch Tab",
        "events": "all",
        "x": 2330,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "82a3b0d90b57140a",
        "type": "ui_button",
        "z": "2219b06636009d6c",
        "name": "Login Button",
        "group": "c57aef7b9edd92a0",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Xác nhận",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "#",
        "className": "",
        "icon": "confirm",
        "payload": "{\"tab\":\"Trang chủ\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 490,
        "y": 200,
        "wires": [
            [
                "0cc7b4ccd73b4e5b"
            ]
        ]
    },
    {
        "id": "594dd80fead3d7c2",
        "type": "ui_ui_control",
        "z": "2219b06636009d6c",
        "name": "Switch Tab",
        "events": "all",
        "x": 970,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "582eade09f17eda9",
        "type": "ui_button",
        "z": "2219b06636009d6c",
        "name": "Login Button",
        "group": "login_group",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Không có tài khoản? Tạo một cái.",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "{\"tab\":\"Đăng ký\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 990,
        "y": 400,
        "wires": [
            [
                "b0f115c029f32eae"
            ]
        ]
    },
    {
        "id": "62995cd98e7fd191",
        "type": "ui_text_input",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Email",
        "tooltip": "",
        "group": "6f469d59f7c4209a",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "email",
        "delay": 300,
        "topic": "Email",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1290,
        "y": 20,
        "wires": [
            [
                "13547f7c37d694ef"
            ]
        ]
    },
    {
        "id": "7c96cfcdd212ef7f",
        "type": "ui_text_input",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Họ",
        "tooltip": "",
        "group": "6f469d59f7c4209a",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Họ",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1290,
        "y": 60,
        "wires": [
            [
                "13547f7c37d694ef"
            ]
        ]
    },
    {
        "id": "d215260966368ec4",
        "type": "ui_text_input",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Tên",
        "tooltip": "",
        "group": "6f469d59f7c4209a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Tên",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1290,
        "y": 100,
        "wires": [
            [
                "13547f7c37d694ef"
            ]
        ]
    },
    {
        "id": "e3ab11f252667bd7",
        "type": "ui_button",
        "z": "2219b06636009d6c",
        "name": "Login Button",
        "group": "6f469d59f7c4209a",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Tiếp tục",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "#",
        "className": "",
        "icon": "register",
        "payload": "{\"tab\": \"Xác nhận\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1530,
        "y": 180,
        "wires": [
            [
                "d1b5011f398453dc",
                "41df75a1317270cc"
            ]
        ]
    },
    {
        "id": "d1b5011f398453dc",
        "type": "ui_ui_control",
        "z": "2219b06636009d6c",
        "name": "Switch Tab",
        "events": "all",
        "x": 1970,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "6b9c18392d588803",
        "type": "ui_button",
        "z": "2219b06636009d6c",
        "name": "Xác nhận đăng kí",
        "group": "fd48b2edfc8db74c",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Tiếp tục",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "#",
        "className": "",
        "icon": "confirm",
        "payload": "{\"tab\":\"Mật khẩu mới\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 450,
        "y": 60,
        "wires": [
            [
                "796e4cda859ad4d7"
            ]
        ]
    },
    {
        "id": "a2cd90d165276d11",
        "type": "ui_ui_control",
        "z": "2219b06636009d6c",
        "name": "Switch Tab",
        "events": "all",
        "x": 930,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "6e5333f2201ca35f",
        "type": "ui_dropdown",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Giới tính",
        "tooltip": "",
        "place": "Select option",
        "group": "6f469d59f7c4209a",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Nam",
                "value": "Nam",
                "type": "str"
            },
            {
                "label": "Nữ",
                "value": "Nữ",
                "type": "str"
            },
            {
                "label": "Khác",
                "value": "Khác",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Giới tính",
        "topicType": "str",
        "className": "",
        "x": 1300,
        "y": 180,
        "wires": [
            [
                "13547f7c37d694ef"
            ]
        ]
    },
    {
        "id": "46c11eb5bcaf4603",
        "type": "ui_text_input",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Địa chỉ",
        "tooltip": "",
        "group": "6f469d59f7c4209a",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "Địa chỉ",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1290,
        "y": 220,
        "wires": [
            [
                "13547f7c37d694ef"
            ]
        ]
    },
    {
        "id": "c96af75c3f277e72",
        "type": "ui_button",
        "z": "2219b06636009d6c",
        "name": "",
        "group": "c902f90e6aca1a97",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "RESET DỮ LIỆU",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 1920,
        "wires": [
            [
                "4145fae106eb6efa"
            ]
        ]
    },
    {
        "id": "04a19e29f0a32259",
        "type": "mqtt out",
        "z": "2219b06636009d6c",
        "name": "",
        "topic": "/wokwi/relay",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e31421cc3e4b27f6",
        "x": 1270,
        "y": 1020,
        "wires": []
    },
    {
        "id": "9a51f5fbdf77c64d",
        "type": "mqtt out",
        "z": "2219b06636009d6c",
        "name": "",
        "topic": "/wokwi/buzzer",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e31421cc3e4b27f6",
        "x": 600,
        "y": 980,
        "wires": []
    },
    {
        "id": "8a27880d2ed058ec",
        "type": "mqtt in",
        "z": "2219b06636009d6c",
        "name": "",
        "topic": "/wokwi/Temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1183ee75764de5bf",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1060,
        "wires": [
            [
                "b182eb4faabecfaf",
                "8fb1b69411086104"
            ]
        ]
    },
    {
        "id": "8b5b9c30a0e4afe2",
        "type": "mqtt in",
        "z": "2219b06636009d6c",
        "name": "",
        "topic": "/wokwi/Humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1183ee75764de5bf",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1180,
        "wires": [
            [
                "7585480df9e4bf35",
                "28883d592c048dd2"
            ]
        ]
    },
    {
        "id": "21492e4d35ac3ecc",
        "type": "mqtt in",
        "z": "2219b06636009d6c",
        "name": "",
        "topic": "/wokwi/PM",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1183ee75764de5bf",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 1300,
        "wires": [
            [
                "768c03cd242d262b",
                "3e428e406717568c"
            ]
        ]
    },
    {
        "id": "a9ee510766ac06ac",
        "type": "ui_gauge",
        "z": "2219b06636009d6c",
        "name": "",
        "group": "bc2745e9261eecb8",
        "order": 4,
        "width": 7,
        "height": 9,
        "gtype": "gage",
        "title": "Gas",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "80",
        "diff": false,
        "className": "",
        "x": 370,
        "y": 1420,
        "wires": []
    },
    {
        "id": "2a2c91a8170bd0b6",
        "type": "mqtt in",
        "z": "2219b06636009d6c",
        "name": "",
        "topic": "/wokwi/Gas",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1183ee75764de5bf",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1420,
        "wires": [
            [
                "a9ee510766ac06ac",
                "18943d631424e887"
            ]
        ]
    },
    {
        "id": "b1e88d5c5b34d6b0",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lấy email, password",
        "func": "if (msg.topic === \"Email\") {\n    flow.set(\"email_login\", msg.payload);\n}\nif (msg.topic === \"Password\") {\n    flow.set(\"password\", msg.payload);\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "1d58f796f86a71ad",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Tìm user trên database",
        "func": "let email = flow.get(\"email_login\");\nmsg.topic = \"SELECT password FROM users WHERE email = (?)\";\nmsg.payload = [email];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 320,
        "wires": [
            [
                "5510597aa6b3528b"
            ]
        ]
    },
    {
        "id": "5510597aa6b3528b",
        "type": "mysql",
        "z": "2219b06636009d6c",
        "mydb": "dbef2de882ccf871",
        "name": "",
        "x": 1430,
        "y": 320,
        "wires": [
            [
                "399df5bbded1576b"
            ]
        ]
    },
    {
        "id": "399df5bbded1576b",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "So sánh password",
        "func": "let password = flow.get(\"password\");\nif  (password === msg.payload[0].password)\n    msg.payload = {\"tab\": \"Trang chủ\"};\nelse\n    msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 320,
        "wires": [
            [
                "b0f115c029f32eae"
            ]
        ]
    },
    {
        "id": "13547f7c37d694ef",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lấy thông tin",
        "func": "if (msg.topic === \"Email\") {\n    flow.set(\"email\", msg.payload);\n}\nelse if (msg.topic === \"Họ\") {\n    flow.set(\"họ\", msg.payload);\n}\nelse if (msg.topic === \"Tên\") {\n    flow.set(\"tên\", msg.payload);\n}\nelse if (msg.topic === \"Ngày sinh\") {\n    flow.set(\"ngày_sinh\", msg.payload);\n}\nelse if (msg.topic === \"Giới tính\") {\n    flow.set(\"giới_tính\", msg.payload);\n}\nelse if (msg.topic === \"Địa chỉ\") {\n    flow.set(\"địa_chỉ\", msg.payload);\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "cac77ec0ef1bf49d",
        "type": "ui_date_picker",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Ngày sinh",
        "group": "6f469d59f7c4209a",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "Ngày sinh",
        "topicType": "str",
        "className": "",
        "x": 1300,
        "y": 140,
        "wires": [
            [
                "13547f7c37d694ef"
            ]
        ]
    },
    {
        "id": "364753ec7b69bd38",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lưu password mới",
        "func": "if (msg.topic === \"pass1\") {\n    flow.set(\"pass1\", msg.payload);\n}\nif (msg.topic === \"pass2\") {\n    flow.set(\"pass2\", msg.payload);\n}\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "0cc7b4ccd73b4e5b",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Tạo password",
        "func": "let p1 = flow.get(\"pass1\");\nlet p2 = flow.get(\"pass2\");\n\nlet out1 = null;\nlet out2 = null;\n\nif (p1 !== undefined && p2 !== undefined) {\n    if (p1 === p2) {\n\n        let email = flow.get(\"email\");\n        let ho = flow.get(\"họ\");\n        let ten = flow.get(\"tên\");\n\n        let ngay_sinh_ts = flow.get(\"ngày_sinh\")\n        let ngay_sinh = null;\n        // Chuyển timestamp sang YYYY-MM-DD nếu tồn tại\n        if (ngay_sinh_ts) {\n            let d = new Date(ngay_sinh_ts);\n            let yyyy = d.getFullYear();\n            let mm = String(d.getMonth() + 1).padStart(2, '0');\n            let dd = String(d.getDate()).padStart(2, '0');\n            ngay_sinh = `${yyyy}-${mm}-${dd}`;\n        }\n        \n        let gioi_tinh = flow.get(\"giới_tính\");\n        let dia_chi = flow.get(\"địa_chỉ\");\n        let password = p1;\n\n        out1 = {\n            topic: \"INSERT INTO users (email, ho, ten, ngay_sinh, gioi_tinh, dia_chi, password) VALUES (?, ?, ?, ?, ?, ?, ?)\",\n            payload: [email, ho, ten, ngay_sinh, gioi_tinh, dia_chi, password]\n        };\n        out2 = { payload: { tab: \"Trang chủ\" } };\n    } else {\n        return [null, null];\n    }\n}\n\nreturn [out1, out2];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 200,
        "wires": [
            [
                "8652b7ba46c76614"
            ],
            [
                "594dd80fead3d7c2"
            ]
        ]
    },
    {
        "id": "8652b7ba46c76614",
        "type": "mysql",
        "z": "2219b06636009d6c",
        "mydb": "dbef2de882ccf871",
        "name": "",
        "x": 970,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "49276ebedc675efd",
        "type": "inject",
        "z": "2219b06636009d6c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1030,
        "y": 540,
        "wires": [
            [
                "01af8e016486741d"
            ]
        ]
    },
    {
        "id": "01af8e016486741d",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Tạo database users",
        "func": "msg.topic = `\nCREATE TABLE IF NOT EXISTS users (\n  id INT NOT NULL AUTO_INCREMENT,\n  email VARCHAR(255) NOT NULL,\n  ho VARCHAR(50) NOT NULL,\n  ten VARCHAR(50) NOT NULL,\n  ngay_sinh DATE DEFAULT NULL,\n  gioi_tinh VARCHAR(20) DEFAULT NULL,\n  dia_chi VARCHAR(255) DEFAULT NULL,\n  password VARCHAR(255) NOT NULL,\n  PRIMARY KEY (id),\n  UNIQUE KEY email (email)\n)\n`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 540,
        "wires": [
            [
                "f3d2e1c2ec99891c"
            ]
        ]
    },
    {
        "id": "f3d2e1c2ec99891c",
        "type": "mysql",
        "z": "2219b06636009d6c",
        "mydb": "dbef2de882ccf871",
        "name": "Tạo database users",
        "x": 1540,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "91016df3823698af",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "chuẩn bị gửi lên cloud",
        "func": "msg.childpath = \"Statistics\"\n\nif(!msg.payload.hasOwnProperty(\"temperature\")){\n    msg.payload.temperature = flow.get(\"temperature\");\n}\nif(!msg.payload.hasOwnProperty(\"humidity\")){\n    msg.payload.humidity = flow.get(\"humidity\");\n}\nif(!msg.payload.hasOwnProperty(\"pm\")){\n    msg.payload.pm = flow.get(\"pm\");\n}\nif(!msg.payload.hasOwnProperty(\"gas\")){\n    msg.payload.gas = flow.get(\"gas\");\n}\nmsg.payload.timestamp = new Date().toISOString();\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1200,
        "wires": [
            [
                "44a85581e2fb42ae"
            ]
        ]
    },
    {
        "id": "18943d631424e887",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "tiền xử lý gas",
        "func": "flow.set(\"gas\", msg.payload); // phòng khi timeout\nmsg.topic = \"gas\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1480,
        "wires": [
            [
                "972823c3b567dc07",
                "e6c9c77e4b4e32e3",
                "212bf27ad04351d0"
            ]
        ]
    },
    {
        "id": "3e428e406717568c",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "tiền xử lý PM",
        "func": "flow.set(\"pm\", msg.payload); // phòng khi timeout\nmsg.topic = \"pm\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1360,
        "wires": [
            [
                "972823c3b567dc07",
                "e6c9c77e4b4e32e3",
                "212bf27ad04351d0"
            ]
        ]
    },
    {
        "id": "28883d592c048dd2",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "tiền xử lý độ ẩm",
        "func": "flow.set(\"humidity\", msg.payload); // phòng khi timeout\nmsg.topic = \"humidity\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1240,
        "wires": [
            [
                "972823c3b567dc07",
                "e6c9c77e4b4e32e3",
                "212bf27ad04351d0"
            ]
        ]
    },
    {
        "id": "8fb1b69411086104",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "tiền xử lý nhiệt độ",
        "func": "flow.set(\"temperature\", msg.payload); // phòng khi timeout\nmsg.topic = \"temperature\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1120,
        "wires": [
            [
                "972823c3b567dc07",
                "e6c9c77e4b4e32e3",
                "212bf27ad04351d0"
            ]
        ]
    },
    {
        "id": "972823c3b567dc07",
        "type": "join",
        "z": "2219b06636009d6c",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": true,
        "timeout": "1",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 690,
        "y": 1200,
        "wires": [
            [
                "91016df3823698af"
            ]
        ]
    },
    {
        "id": "3c8f33a63e018812",
        "type": "mqtt out",
        "z": "2219b06636009d6c",
        "name": "",
        "topic": "/wokwi/Humidity/Threshold",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e31421cc3e4b27f6",
        "x": 1340,
        "y": 600,
        "wires": []
    },
    {
        "id": "d01bd68dd48cd5be",
        "type": "mqtt out",
        "z": "2219b06636009d6c",
        "name": "",
        "topic": "/wokwi/Temperature/Threshold",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e31421cc3e4b27f6",
        "x": 1350,
        "y": 680,
        "wires": []
    },
    {
        "id": "43e86130f3db8a5f",
        "type": "mqtt out",
        "z": "2219b06636009d6c",
        "name": "",
        "topic": "/wokwi/Gas/Threshold",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e31421cc3e4b27f6",
        "x": 1320,
        "y": 840,
        "wires": []
    },
    {
        "id": "9167fcfb860c9669",
        "type": "mqtt out",
        "z": "2219b06636009d6c",
        "name": "",
        "topic": "/wokwi/PM/Threshold",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e31421cc3e4b27f6",
        "x": 1320,
        "y": 920,
        "wires": []
    },
    {
        "id": "8ddfc9ea6c6a35e9",
        "type": "mqtt in",
        "z": "2219b06636009d6c",
        "name": "",
        "topic": "/wokwi/buzzer/alert",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e31421cc3e4b27f6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1000,
        "wires": [
            [
                "d0407c2de269d079"
            ]
        ]
    },
    {
        "id": "6f5a04eb5ce9acb5",
        "type": "debug",
        "z": "2219b06636009d6c",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 1040,
        "wires": []
    },
    {
        "id": "9f352d85e784f23a",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lấy dữ liệu",
        "func": "if (msg.topic === \"Temperature\") {\n    flow.set(\"pending_Temperature\", Number(msg.payload)); \n}\nif (msg.topic === \"Humidity\") {\n    flow.set(\"pending_Humidity\", Number(msg.payload)); \n}\nif (msg.topic === \"Gas\") {\n    flow.set(\"pending_Gas\", Number(msg.payload)); \n}\nif (msg.topic === \"PM\") {\n    flow.set(\"pending_PM\", Number(msg.payload)); \n}\n\nreturn null; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "e6c9c77e4b4e32e3",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Kiểm tra ngưỡng",
        "func": "// Lấy email từ các trường hợp khác nhau\nlet email = flow.get(\"email_login\") || flow.get(\"email\") || flow.get(\"email_rs_pass\");\n\n// Nếu không có email thì dừng\nif (!email) {\n    node.warn(\"Không tìm thấy email người nhận\");\n    return null;\n}\n\n// Danh sách các loại cảm biến cần kiểm tra\nlet sensors = [\n    { key: \"temperature\", thresholdKey: \"pending_Temperature\", name: \"Nhiệt độ\", unit: \"°C\" },\n    { key: \"humidity\", thresholdKey: \"pending_Humidity\", name: \"Độ ẩm\", unit: \"%\" },\n    { key: \"gas\", thresholdKey: \"pending_Gas\", name: \"Khí gas\", unit: \"ppm\" },\n    { key: \"pm\", thresholdKey: \"pending_PM\", name: \"Bụi mịn\", unit: \"µg/m³\" }\n];\n\n// Mảng chứa các cảnh báo cần gửi\nlet alerts = [];\n\nsensors.forEach(sensor => {\n    let value = flow.get(sensor.key);\n    let threshold = flow.get(sensor.thresholdKey);\n    let lastAlert = flow.get(`lastAlert_${sensor.key}`) || null;\n\n    if (value !== undefined && threshold !== undefined) {\n        if (value > threshold) {\n            if (lastAlert === null || lastAlert !== value) {\n                flow.set(`lastAlert_${sensor.key}`, value);\n                alerts.push(`${sensor.name} hiện tại là ${value}${sensor.unit} đã vượt ngưỡng ${threshold}${sensor.unit}`);\n            }\n        } else {\n            flow.set(`lastAlert_${sensor.key}`, null); // Reset khi an toàn\n        }\n    }\n});\n\n// Nếu có cảnh báo thì gửi email\nif (alerts.length > 0) {\n    msg.to = email;\n    msg.topic = \"CẢNH BÁO HỆ THỐNG (VUI LÒNG BẬT MÁY LỌC KHÔNG KHÍ)\";\n    msg.payload = alerts.join(\"\\n\"); // Ghép các cảnh báo thành nhiều dòng\n    return msg;\n}\n\nreturn null; // Không có gì để gửi\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1320,
        "wires": [
            [
                "16c7b87dbb577d83",
                "6ff317c89717b1d0"
            ]
        ]
    },
    {
        "id": "6ff317c89717b1d0",
        "type": "debug",
        "z": "2219b06636009d6c",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1380,
        "wires": []
    },
    {
        "id": "1fd6ab8ba70bd52c",
        "type": "inject",
        "z": "2219b06636009d6c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 460,
        "y": 1600,
        "wires": [
            [
                "67f8bd33948c1c6a"
            ]
        ]
    },
    {
        "id": "212bf27ad04351d0",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lấy dữ liệu",
        "func": "// Hàm format epoch ms -> \"dd/MM/yyyy HH:mm:ss\" theo GMT+7\nfunction formatMsToVN(ms) {\n    const vn = new Date(ms + 7 * 60 * 60 * 1000); // shift UTC -> VN\n    const dd = String(vn.getUTCDate()).padStart(2, '0');\n    const mm = String(vn.getUTCMonth() + 1).padStart(2, '0');\n    const yyyy = vn.getUTCFullYear();\n    const hh = String(vn.getUTCHours()).padStart(2, '0');\n    const mi = String(vn.getUTCMinutes()).padStart(2, '0');\n    const ss = String(vn.getUTCSeconds()).padStart(2, '0');\n    return `${hh}:${mi}:${ss} ${dd}/${mm}/${yyyy}`;\n}\n\n// Danh sách cảm biến cần theo dõi (giữ nguyên nếu bạn đã có)\nlet sensors = [\n    { key: \"temperature\", name: \"Nhiệt độ\", unit: \"°C\" },\n    { key: \"humidity\", name: \"Độ ẩm\", unit: \"%\" },\n    { key: \"gas\", name: \"Khí gas\", unit: \"ppm\" },\n    { key: \"pm\", name: \"Bụi mịn\", unit: \"µg/m³\" }\n];\n\n// Lấy dữ liệu thống kê hiện tại (trong ngày)\nlet changes = flow.get(\"sensorChanges\") || {\n    temperature: { lastValue: null, lastTime: null, changes: [] },\n    humidity: { lastValue: null, lastTime: null, changes: [] },\n    gas: { lastValue: null, lastTime: null, changes: [] },\n    pm: { lastValue: null, lastTime: null, changes: [] },\n    alerts: { temperature: 0, humidity: 0, gas: 0, pm: 0 }\n};\n\n// Xác định loại dữ liệu hiện tại\nlet type = msg.topic; // Ví dụ: \"temperature\", \"humidity\"\nlet value = Number(msg.payload);\n\nif (!changes[type]) {\n    node.warn(`Không xác định loại dữ liệu: ${type}`);\n    return null;\n}\n\nlet sensor = changes[type];\n\n// Lấy thời gian hiện tại chuẩn (epoch ms UTC)\nlet nowMs = Date.now();\nlet nowStr = formatMsToVN(nowMs);\n\n// Nếu giá trị thay đổi so với lần trước\nif (sensor.lastValue === null || sensor.lastValue !== value) {\n    sensor.lastValue = value;\n    sensor.lastTime = nowStr;\n    // lưu cả epoch ms và chuỗi format VN\n    sensor.changes.push({ value: value, timeMs: nowMs, timeStr: nowStr });\n\n    let threshold = flow.get(`pending_${type.charAt(0).toUpperCase() + type.slice(1)}`);\n    if (threshold !== undefined && value > threshold) {\n        changes.alerts[type] += 1;\n    }\n}\n\n// Lưu lại\nchanges[type] = sensor;\nflow.set(\"sensorChanges\", changes);\n\nreturn null;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1420,
        "wires": [
            [
                "34a15acac326d1a6"
            ]
        ]
    },
    {
        "id": "34a15acac326d1a6",
        "type": "debug",
        "z": "2219b06636009d6c",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1460,
        "wires": []
    },
    {
        "id": "67f8bd33948c1c6a",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Tổng hợp",
        "func": "// Lấy dữ liệu đã lưu trong ngày\nlet changes = flow.get(\"sensorChanges\");\nif (!changes) {\n    node.warn(\"Chưa có dữ liệu để báo cáo\");\n    return null;\n}\n\n// Hàm format epoch ms -> \"dd/MM/yyyy HH:mm:ss\" theo GMT+7\nfunction formatMsToVN(ms) {\n    const vn = new Date(ms + 7 * 60 * 60 * 1000); // shift UTC -> VN\n    const dd = String(vn.getUTCDate()).padStart(2, '0');\n    const mm = String(vn.getUTCMonth() + 1).padStart(2, '0');\n    const yyyy = vn.getUTCFullYear();\n    const hh = String(vn.getUTCHours()).padStart(2, '0');\n    const mi = String(vn.getUTCMinutes()).padStart(2, '0');\n    const ss = String(vn.getUTCSeconds()).padStart(2, '0');\n    return `${hh}:${mi}:${ss} ${dd}/${mm}/${yyyy}`;\n}\n// Fallback: parse các chuỗi cũ dạng \"dd/MM/yyyy HH:mm:ss\" -> epoch ms (UTC)\nfunction parseVNStringToMs(s) {\n    if (!s || typeof s !== 'string') return NaN;\n    const m = s.match(/^(\\d{2})\\/(\\d{2})\\/(\\d{4})\\s+(\\d{2}):(\\d{2}):(\\d{2})$/);\n    if (!m) return NaN;\n    const day = Number(m[1]), month = Number(m[2]), year = Number(m[3]);\n    const hh = Number(m[4]), mi = Number(m[5]), ss = Number(m[6]);\n    // VN time -> UTC epoch ms = Date.UTC(... with hour -7)\n    return Date.UTC(year, month - 1, day, hh - 7, mi, ss);\n}\n\n// Danh sách cảm biến\nlet sensors = [\n    { key: \"temperature\", name: \"Nhiệt độ\", unit: \"°C\" },\n    { key: \"humidity\", name: \"Độ ẩm\", unit: \"%\" },\n    { key: \"gas\", name: \"Khí gas\", unit: \"ppm\" },\n    { key: \"pm\", name: \"Bụi mịn\", unit: \"µg/m³\" }\n];\n\nlet reportText = \"BÁO CÁO TỔNG HỢP NGÀY\\n\\n\";\n\n// Tính toán cho từng cảm biến\nsensors.forEach(sensor => {\n    let data = changes[sensor.key]?.changes || [];\n    if (data.length === 0) {\n        reportText += `${sensor.name}: Không có dữ liệu\\n\\n`;\n        return;\n    }\n\n    // Tìm max, min, avg -- dùng giá trị; lưu timeMs tương ứng (fallback parse nếu cần)\n    let maxVal = -Infinity, minVal = Infinity, sum = 0;\n    let maxTimeMs = null, minTimeMs = null;\n\n    data.forEach(d => {\n        const v = Number(d.value);\n        // lấy epoch ms ưu tiên timeMs nếu có, nếu không thử parse timeStr hoặc ISO\n        let tMs = NaN;\n        if (d.timeMs !== undefined) tMs = Number(d.timeMs);\n        else if (typeof d.timeStr === 'string' && d.timeStr.match(/^\\d{2}\\/\\d{2}\\/\\d{4}/)) tMs = parseVNStringToMs(d.timeStr);\n        else if (typeof d.time === 'string' && d.time.includes('T')) tMs = new Date(d.time).getTime();\n\n        if (v > maxVal) {\n            maxVal = v;\n            maxTimeMs = tMs;\n        }\n        if (v < minVal) {\n            minVal = v;\n            minTimeMs = tMs;\n        }\n        sum += v;\n    });\n\n    let avg = (sum / data.length).toFixed(2);\n\n    // Số lần cảnh báo\n    let alertCount = changes.alerts?.[sensor.key] || 0;\n\n    // Format thời gian để hiển thị (nếu không có ms thì in \"Không rõ\")\n    let maxTimeStr = (maxTimeMs || maxTimeMs === 0) ? formatMsToVN(maxTimeMs) : \"Không rõ\";\n    let minTimeStr = (minTimeMs || minTimeMs === 0) ? formatMsToVN(minTimeMs) : \"Không rõ\";\n\n    // Ghi vào báo cáo\n    reportText += `${sensor.name}:\\n`;\n    reportText += `  - Max: ${maxVal}${sensor.unit} (lúc ${maxTimeStr})\\n`;\n    reportText += `  - Min: ${minVal}${sensor.unit} (lúc ${minTimeStr})\\n`;\n    reportText += `  - Avg: ${avg}${sensor.unit}\\n`;\n    reportText += `  - Số lần cảnh báo: ${alertCount}\\n\\n`;\n});\n\n// Lấy email từ các trường hợp khác nhau\nlet email = flow.get(\"email_login\") || flow.get(\"email\") || flow.get(\"email_rs_pass\");\n\n// Nếu không có email thì dừng\nif (!email) {\n    node.warn(\"Không tìm thấy email người nhận\");\n    return null;\n}\n\nmsg.to = email;\nmsg.topic = \"BÁO CÁO TỔNG HỢP TRONG NGÀY\";\nmsg.payload = reportText;\n\n// Reset dữ liệu để bắt đầu ngày mới (nếu vẫn cần)\nflow.set(\"sensorChanges\", {\n    temperature: { lastValue: null, lastTime: null, changes: [] },\n    humidity: { lastValue: null, lastTime: null, changes: [] },\n    gas: { lastValue: null, lastTime: null, changes: [] },\n    pm: { lastValue: null, lastTime: null, changes: [] },\n    alerts: { temperature: 0, humidity: 0, gas: 0, pm: 0 }\n});\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1600,
        "wires": [
            [
                "e56e5b16d211f206",
                "414876122d4ec0c9"
            ]
        ]
    },
    {
        "id": "414876122d4ec0c9",
        "type": "debug",
        "z": "2219b06636009d6c",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 1680,
        "wires": []
    },
    {
        "id": "16c7b87dbb577d83",
        "type": "e-mail",
        "z": "2219b06636009d6c",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 950,
        "y": 1300,
        "wires": []
    },
    {
        "id": "e56e5b16d211f206",
        "type": "e-mail",
        "z": "2219b06636009d6c",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 870,
        "y": 1600,
        "wires": []
    },
    {
        "id": "44a85581e2fb42ae",
        "type": "firebase modify",
        "z": "2219b06636009d6c",
        "name": "",
        "firebaseconfig": "",
        "childpath": "msg.childpath",
        "method": "push",
        "value": "msg.payload",
        "priority": "msg.priority",
        "x": 1720,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "9b98fb2d16fa6255",
        "type": "e-mail",
        "z": "2219b06636009d6c",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 2070,
        "y": 200,
        "wires": []
    },
    {
        "id": "41df75a1317270cc",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Gửi mã xác nhận",
        "func": "let userEmail = flow.get(\"email\");\n\nlet code = Math.floor(100000 + Math.random() * 900000).toString();\nflow.set(\"verify_code\", code);\n\nmsg.topic = \"Mã xác nhận đăng ký tài khoản\";\nmsg.payload = `Xin chào,\\n\\nMã xác nhận của bạn là: ${code}\\n\\nVui lòng nhập mã này để hoàn tất đăng ký.\\n`;\n\nmsg.to = userEmail;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1790,
        "y": 200,
        "wires": [
            [
                "9b98fb2d16fa6255"
            ]
        ]
    },
    {
        "id": "796e4cda859ad4d7",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "check verify code",
        "func": "let code1 = flow.get(\"verify_code\");\nlet code2 = flow.get(\"verify_code_check\");\n\n\nif(code1 === code2){\n    msg = { payload: { \"tab\": \"Mật khẩu mới\" } };\n    return msg;\n}\nreturn code1;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 60,
        "wires": [
            [
                "a2cd90d165276d11"
            ]
        ]
    },
    {
        "id": "6368aad242793e9d",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lấy mã xác nhận từ input",
        "func": "flow.set(\"verify_code_check\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "120a8ceea9790283",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lấy thông tin",
        "func": "flow.set(\"email_rs_pass\", msg.payload);\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "40f266f76070ab3a",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Gửi mã xác nhận",
        "func": "let userEmail = flow.get(\"email_rs_pass\");\n\nlet code = Math.floor(100000 + Math.random() * 900000).toString();\nflow.set(\"verify_code_pass\", code);\n\nmsg.topic = \"Mã xác nhận đổi mật khẩu\";\nmsg.payload = `Xin chào,\\n\\nMã xác nhận của bạn là: ${code}\\n\\nVui lòng nhập mã này để đổi mật khẩu mới.\\n`;\n\nmsg.to = userEmail;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2210,
        "y": 360,
        "wires": [
            [
                "1b0db0ce260d12a7"
            ]
        ]
    },
    {
        "id": "b5245271e1bea0e3",
        "type": "firebase.on",
        "z": "2219b06636009d6c",
        "name": "",
        "firebaseconfig": "",
        "childpath": "Statistics",
        "atStart": true,
        "eventType": "child_added",
        "queries": [
            {
                "name": "limitToLast",
                "value": "1"
            }
        ],
        "x": 400,
        "y": 1760,
        "wires": [
            [
                "702856307fc6974f"
            ]
        ]
    },
    {
        "id": "702856307fc6974f",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lấy dữ liệu",
        "func": "/* // Lấy dữ liệu từ msg.payload\nlet data = msg.payload;\n\n// Nếu dữ liệu không hợp lệ\nif (!data || !data.gas || !data.humidity || !data.pm || !data.temperature) {\n    node.warn(\"Dữ liệu không hợp lệ\");\n    return null;\n}\n\n// Chuyển timestamp sang dạng dễ đọc\nlet time = new Date(data.timestamp);\ndata.timeStr = time.toLocaleString(\"vi-VN\", { timeZone: \"Asia/Ho_Chi_Minh\" });\n\nmsg.payload = data;\nreturn msg; */\n\n// Lấy timestamp từ dữ liệu Firebase\nlet dataTime = new Date(msg.payload.timestamp);\nconst firebaseDate = dataTime.toISOString().slice(0, 10);\n\n// Lấy dữ liệu lưu trong flow\nlet storedDate = flow.get('date') || null;\nlet count = flow.get('count') || 0;\nlet avgTemperature = flow.get('avgTemperature') || 0;\nlet avgHumidity = flow.get('avgHumidity') || 0;\nlet avgGas = flow.get('avgGas') || 0;\nlet avgPM = flow.get('avgPM') || 0;\n\n// Lấy thời gian đo trong ngày từ flow (nếu có)\nlet startTimeStr = flow.get('startTime') || null;\nlet endTimeStr = flow.get('endTime') || null;\nlet startTime = startTimeStr ? new Date(startTimeStr) : null;\nlet endTime = endTimeStr ? new Date(endTimeStr) : null;\n\n// Nếu ngày mới trong Firebase → reset và set thời gian bắt đầu đo\nif (storedDate !== firebaseDate) {\n    count = 0;\n    avgTemperature = 0;\n    avgHumidity = 0;\n    avgGas = 0;\n    avgPM = 0;\n    storedDate = firebaseDate;\n\n    startTime = dataTime; // thời gian đo đầu tiên của ngày\n    endTime = dataTime;   // lúc đầu cũng là thời gian kết thúc\n} else {\n    // Nếu chưa có startTime (trường hợp dữ liệu lỗi), gán luôn\n    if (!startTime) startTime = dataTime;\n    // Cập nhật thời gian kết thúc khi có dữ liệu mới trong cùng ngày\n    endTime = dataTime;\n}\n\n// Lấy dữ liệu mới từ Firebase\nconst { temperature, humidity, gas, pm } = msg.payload;\n\nif (\n    typeof temperature === 'number' &&\n    typeof humidity === 'number' &&\n    typeof gas === 'number' &&\n    typeof pm === 'number'\n) {\n    count += 1;\n\n    avgTemperature = (avgTemperature * (count - 1) + temperature) / count;\n    avgHumidity = (avgHumidity * (count - 1) + humidity) / count;\n    avgGas = (avgGas * (count - 1) + gas) / count;\n    avgPM = (avgPM * (count - 1) + pm) / count;\n\n    // Lưu vào flow (lưu string để tránh mất dữ liệu khi restart)\n    flow.set('date', storedDate);\n    flow.set('count', count);\n    flow.set('avgTemperature', avgTemperature);\n    flow.set('avgHumidity', avgHumidity);\n    flow.set('avgGas', avgGas);\n    flow.set('avgPM', avgPM);\n    flow.set('startTime', startTime.toISOString());\n    flow.set('endTime', endTime.toISOString());\n\n    // Format khoảng thời gian đo\n    const timeRange = `${startTime.toLocaleString('vi-VN')} → ${endTime.toLocaleString('vi-VN')}`;\n\n    // Xuất payload\n    msg.payload = {\n        temperature: avgTemperature.toFixed(2),\n        humidity: avgHumidity.toFixed(2),\n        gas: avgGas.toFixed(2),\n        pm: avgPM.toFixed(2),\n        firebaseDate: firebaseDate,\n        timeRange: timeRange\n    };\n} else {\n    msg.payload = { error: \"Dữ liệu đầu vào không hợp lệ\" };\n}\n\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1760,
        "wires": [
            [
                "0d45834725d21104"
            ]
        ]
    },
    {
        "id": "0d45834725d21104",
        "type": "ui_template",
        "z": "2219b06636009d6c",
        "group": "c902f90e6aca1a97",
        "name": "Hiển thị text",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div style=\"text-align: center;\">\n    📊 <b>Báo cáo chất lượng không khí:</b><br>\n    🌡 Nhiệt độ trung bình: {{msg.payload.temperature}} °C<br>\n    💧 Độ ẩm trung bình: {{msg.payload.humidity}} %<br>\n    🌫 Bụi mịn trung bình: {{msg.payload.pm}} µg/m³<br>\n    🛢 Khí Gas trung bình: {{msg.payload.gas}} ppm<br>\n    🕒 Thời gian đo: {{msg.payload.timeRange}}\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "4145fae106eb6efa",
        "type": "firebase.once",
        "z": "2219b06636009d6c",
        "name": "",
        "firebaseconfig": "",
        "childpath": "Statistics",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [],
        "x": 610,
        "y": 1920,
        "wires": [
            [
                "e8c9774bc5447651",
                "06b729edb35737bf",
                "0330cebdc3a4e0a7",
                "5d5a43c2d0a8966d"
            ]
        ]
    },
    {
        "id": "e8c9774bc5447651",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lấy ngày",
        "func": "let dataObj = msg.payload; // dữ liệu từ firebase node trả về (object)\nlet data = Object.keys(dataObj).map(k => dataObj[k]); // chuyển thành mảng\n\nlet minDate = data.reduce((min, row) => {\n    let d = new Date(row.timestamp);\n    return d < min ? d : min;\n}, new Date(data[0].timestamp));\n\nlet maxDate = data.reduce((max, row) => {\n    let d = new Date(row.timestamp);\n    return d > max ? d : max;\n}, new Date(data[0].timestamp));\n\nreturn [\n    {\n        payload: minDate.toISOString().slice(0, 10),\n        topic: \"start_date\"\n    },\n    {\n        payload: maxDate.toISOString().slice(0, 10),\n        topic: \"end_date\"\n    }\n];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1860,
        "wires": [
            [
                "9df72c4c3cb6fcb8"
            ],
            [
                "4b7b2062000f1f8e"
            ]
        ]
    },
    {
        "id": "06b729edb35737bf",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lấy dữ liệu",
        "func": "let rawData = msg.payload || {};\nlet dataArray = Object.values(rawData);  // Lấy mảng các giá trị object con\n\nflow.set(\"allData\", dataArray);\nmsg.payload = flow.get(\"allData\");\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 1940,
        "wires": [
            [
                "6df734410e79b410"
            ]
        ]
    },
    {
        "id": "0330cebdc3a4e0a7",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lây dữ liệu nhiệt độ, độ ẩm",
        "func": "let data = msg.payload; // Dữ liệu từ node firebase trả về\n\nlet dailyData = {};\n\nfor (let key in data) {\n    let entry = data[key];\n    let temp = Number(entry.temperature);\n    let humi = Number(entry.humidity);\n    let dateStr = new Date(entry.timestamp).toISOString().split(\"T\")[0];\n\n    if (!isNaN(temp) && !isNaN(humi)) {\n        if (!dailyData[dateStr]) {\n            dailyData[dateStr] = { tempSum: 0, humiSum: 0, count: 0 };\n        }\n        dailyData[dateStr].tempSum += temp;\n        dailyData[dateStr].humiSum += humi;\n        dailyData[dateStr].count += 1;\n    }\n}\n\nlet temperature = [];\nlet humidity = [];\nlet labels = [];\n\nfor (let date in dailyData) {\n    let avgTemp = dailyData[date].tempSum / dailyData[date].count;\n    let avgHumi = dailyData[date].humiSum / dailyData[date].count;\n    temperature.push(avgTemp);\n    humidity.push(avgHumi);\n    labels.push(date);\n}\n\nmsg.payload = [\n    {\n        series: [\"Average Temperature\", \"Average Humidity\"],\n        data: [temperature, humidity],\n        labels: labels\n    }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 2020,
        "wires": [
            [
                "37846d5779e57e10"
            ]
        ]
    },
    {
        "id": "5d5a43c2d0a8966d",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lấy dữ liệu gas, pm",
        "func": "let data = msg.payload; // dữ liệu từ Firebase node trả về\n\nlet dailyData = {};\n\n// Gom nhóm dữ liệu theo ngày và tính trung bình\nfor (let key in data) {\n    let entry = data[key];\n    let gas = Number(entry.gas);\n    let pm = Number(entry.pm);\n    let dateStr = new Date(entry.timestamp).toISOString().split(\"T\")[0];\n\n    if (!isNaN(gas) && !isNaN(pm)) {\n        if (!dailyData[dateStr]) {\n            dailyData[dateStr] = { gasSum: 0, pmSum: 0, count: 0 };\n        }\n        dailyData[dateStr].gasSum += gas;\n        dailyData[dateStr].pmSum += pm;\n        dailyData[dateStr].count += 1;\n    }\n}\n\n// Chuyển sang mảng để dễ sắp xếp theo ngày\nlet dailyArray = Object.keys(dailyData).map(date => ({\n    date: date,\n    avgGas: dailyData[date].gasSum / dailyData[date].count,\n    avgPM: dailyData[date].pmSum / dailyData[date].count\n}));\n\n// Sắp xếp theo ngày tăng dần\ndailyArray.sort(function (a, b) {\n    return new Date(a.date).getTime() - new Date(b.date).getTime();\n});\n// Chỉ lấy N ngày gần nhất\nlet N = 7; // số ngày muốn hiển thị\nlet recentData = dailyArray.slice(-N);\n\nlet gasArray = [];\nlet pmArray = [];\nlet labels = [];\n\nrecentData.forEach(item => {\n    gasArray.push(item.avgGas);\n    pmArray.push(item.avgPM);\n    labels.push(item.date);\n});\n\nmsg.payload = [\n    {\n        series: [\"Gas\", \"PM\"],\n        data: [gasArray, pmArray],\n        labels: labels\n    }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2100,
        "wires": [
            [
                "186145912bccb8d7"
            ]
        ]
    },
    {
        "id": "37846d5779e57e10",
        "type": "ui_chart",
        "z": "2219b06636009d6c",
        "name": "",
        "group": "c902f90e6aca1a97",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Môi trường",
        "chartType": "line",
        "legend": "true",
        "xformat": "Y-M-D",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#b31e1e",
            "#001beb",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1910,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "9df72c4c3cb6fcb8",
        "type": "ui_date_picker",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Từ",
        "group": "c902f90e6aca1a97",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "topic": "start_date",
        "topicType": "msg",
        "className": "",
        "x": 1150,
        "y": 1820,
        "wires": [
            [
                "75cff54dc07cb40d",
                "8c62f7ae999a7bda"
            ]
        ]
    },
    {
        "id": "4b7b2062000f1f8e",
        "type": "ui_date_picker",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Đến ",
        "group": "c902f90e6aca1a97",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": true,
        "topic": "end_date",
        "topicType": "msg",
        "className": "",
        "x": 1150,
        "y": 1880,
        "wires": [
            [
                "48c0e62818c373f4"
            ]
        ]
    },
    {
        "id": "1ab672ae7b918842",
        "type": "ui_button",
        "z": "2219b06636009d6c",
        "name": "",
        "group": "c902f90e6aca1a97",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "LỌC",
        "tooltip": "",
        "color": "",
        "bgcolor": "Blue",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 1550,
        "y": 1880,
        "wires": [
            [
                "85fc59f02b1e8503"
            ]
        ]
    },
    {
        "id": "186145912bccb8d7",
        "type": "ui_chart",
        "z": "2219b06636009d6c",
        "name": "",
        "group": "c902f90e6aca1a97",
        "order": 7,
        "width": 0,
        "height": 0,
        "label": "Chất lượng không khí",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff7b00",
            "#e9afaf",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1900,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "75cff54dc07cb40d",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lấy ngày BD",
        "func": "flow.set(msg.topic, msg.payload);  // topic = start_date hoặc end_date\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1820,
        "wires": [
            [
                "fb2e74eb8412ec2c"
            ]
        ]
    },
    {
        "id": "48c0e62818c373f4",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lấy ngày KT",
        "func": "flow.set(msg.topic, msg.payload);  // topic = start_date hoặc end_date\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "85fc59f02b1e8503",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lọc dữ liệu",
        "func": "let data = flow.get(\"allData\") || [];\n\nlet start = flow.get(\"start_date\");\nlet end = flow.get(\"end_date\");\n\nif (start == null || end == null) {\n    node.warn(\"Chưa chọn ngày bắt đầu hoặc kết thúc\");\n    return null;\n}\n\n// Chuyển end thành cuối ngày để lọc đủ\nlet endDate = new Date(end);\nendDate.setHours(23, 59, 59, 999);\nlet endTimestamp = endDate.getTime();\n\n// Chuyển start sang timestamp\nlet startTimestamp = Number(start);\n\n// Lọc theo trường timestamp\nlet filtered = data.filter(row => {\n    let t = new Date(row.timestamp).getTime();\n    return t >= startTimestamp && t <= endTimestamp;\n});\n\n// Nếu không có dữ liệu thì trả về mảng rỗng cho chart\nif (filtered.length === 0) {\n    msg.payload = [\n        {\n            series: [\"Temperature\", \"Humidity\"],\n            data: [[], []],\n            labels: []\n        }\n    ];\n    return msg;\n}\n\n// Nhóm theo ngày và tính trung bình từng ngày\n// Tạo một object để lưu trung bình theo ngày\nlet grouped = {};\n\nfiltered.forEach(row => {\n    let day = row.timestamp.substring(0, 10); // lấy YYYY-MM-DD\n    if (!grouped[day]) {\n        grouped[day] = { tempSum: 0, tempCount: 0, humiSum: 0, humiCount: 0 };\n    }\n    let temp = Number(row.temperature);\n    if (!isNaN(temp)) {\n        grouped[day].tempSum += temp;\n        grouped[day].tempCount++;\n    }\n    let humi = Number(row.humidity);\n    if (!isNaN(humi)) {\n        grouped[day].humiSum += humi;\n        grouped[day].humiCount++;\n    }\n});\n\n// Chuẩn bị dữ liệu cho chart\nlet labels = Object.keys(grouped).sort(); // ngày tăng dần\nlet avgTemps = [];\nlet avgHumis = [];\n\nlabels.forEach(day => {\n    let g = grouped[day];\n    avgTemps.push(g.tempCount ? parseFloat((g.tempSum / g.tempCount).toFixed(2)) : 0);\n    avgHumis.push(g.humiCount ? parseFloat((g.humiSum / g.humiCount).toFixed(2)) : 0);\n});\n\nmsg.payload = [\n    {\n        series: [\"Average Temperature\", \"Average Humidity\"],\n        data: [avgTemps, avgHumis],\n        labels: labels\n    }\n];\nmsg.ui_control = {\n    options: {\n        elements: {\n            line: {\n                fill: false\n            },\n            point: {\n                radius: 4,\n                hoverRadius: 6\n            }\n        }\n    }\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 1920,
        "wires": [
            [
                "dc53e55e60e5e4c6",
                "37846d5779e57e10"
            ]
        ]
    },
    {
        "id": "dc53e55e60e5e4c6",
        "type": "debug",
        "z": "2219b06636009d6c",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1900,
        "y": 1840,
        "wires": []
    },
    {
        "id": "8c62f7ae999a7bda",
        "type": "debug",
        "z": "2219b06636009d6c",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 1740,
        "wires": []
    },
    {
        "id": "fb2e74eb8412ec2c",
        "type": "debug",
        "z": "2219b06636009d6c",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 1760,
        "wires": []
    },
    {
        "id": "6df734410e79b410",
        "type": "debug",
        "z": "2219b06636009d6c",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 1960,
        "wires": []
    },
    {
        "id": "27e0be024c71eba7",
        "type": "ui_text_input",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Mã xác nhận - Quên mật khẩu",
        "tooltip": "",
        "group": "f0f84895977cfd6f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1970,
        "y": 500,
        "wires": [
            [
                "8dfadeafb83226c3"
            ]
        ]
    },
    {
        "id": "dc492d028944304a",
        "type": "ui_text_input",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Mật khẩu",
        "tooltip": "",
        "group": "bab1bd86eeb8ab7d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": 300,
        "topic": "pass1",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1740,
        "y": 640,
        "wires": [
            [
                "a4dfd07ad340ddaa"
            ]
        ]
    },
    {
        "id": "3ad8d08df37ec326",
        "type": "ui_text_input",
        "z": "2219b06636009d6c",
        "name": "",
        "label": "Xác nhận mật khẩu",
        "tooltip": "",
        "group": "bab1bd86eeb8ab7d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": 300,
        "topic": "pass2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1710,
        "y": 680,
        "wires": [
            [
                "a4dfd07ad340ddaa"
            ]
        ]
    },
    {
        "id": "6018504e241633e8",
        "type": "ui_button",
        "z": "2219b06636009d6c",
        "name": "Login Button",
        "group": "bab1bd86eeb8ab7d",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Xác nhận",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "#",
        "className": "",
        "icon": "confirm",
        "payload": "{\"tab\":\"Trang chủ\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1970,
        "y": 720,
        "wires": [
            [
                "f54545577a81e142"
            ]
        ]
    },
    {
        "id": "5385cd0dd2a39071",
        "type": "ui_ui_control",
        "z": "2219b06636009d6c",
        "name": "Switch Tab",
        "events": "all",
        "x": 2450,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "3da4c4aac3fdfb18",
        "type": "ui_button",
        "z": "2219b06636009d6c",
        "name": "Login Button",
        "group": "f0f84895977cfd6f",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Tiếp tục",
        "tooltip": "",
        "color": "#ffffff",
        "bgcolor": "#",
        "className": "",
        "icon": "confirm",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 1970,
        "y": 540,
        "wires": [
            [
                "d2ce5f27611b59b8"
            ]
        ]
    },
    {
        "id": "58dba8bd4c8895d5",
        "type": "ui_ui_control",
        "z": "2219b06636009d6c",
        "name": "Switch Tab",
        "events": "all",
        "x": 2490,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "a4dfd07ad340ddaa",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lưu password mới",
        "func": "if (msg.topic === \"pass1\") {\n    flow.set(\"rs_pass1\", msg.payload);\n}\nif (msg.topic === \"pass2\") {\n    flow.set(\"rs_pass2\", msg.payload);\n}\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "f54545577a81e142",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Tạo password",
        "func": "let p1 = flow.get(\"rs_pass1\");\nlet p2 = flow.get(\"rs_pass2\");\n\nlet out1 = null;\nlet out2 = null;\n\nif (p1 !== undefined && p2 !== undefined) {\n    if (p1 === p2) {\n\n        let email = flow.get(\"email_rs_pass\");\n        let password = p1;\n\n        out1 = {\n            topic: \"UPDATE users SET password = ? WHERE email = ?\",\n            payload: [password, email]\n        };\n        out2 = { payload: { tab: \"Trang chủ\" } };\n    } else {\n        return [null, null];\n    }\n}\n\nreturn [out1, out2];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2180,
        "y": 720,
        "wires": [
            [
                "3cb7bcaa74163f0c"
            ],
            [
                "5385cd0dd2a39071"
            ]
        ]
    },
    {
        "id": "3cb7bcaa74163f0c",
        "type": "mysql",
        "z": "2219b06636009d6c",
        "mydb": "dbef2de882ccf871",
        "name": "",
        "x": 2450,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "d2ce5f27611b59b8",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "check verify code",
        "func": "let code1 = flow.get(\"verify_code_pass\");\nlet code2 = flow.get(\"verify_code_pass_check\");\n\n\nif(code1 === code2){\n    msg = { payload: { \"tab\": \"Đổi mật khẩu\" } };\n    return msg;\n}\nreturn code1;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2270,
        "y": 540,
        "wires": [
            [
                "58dba8bd4c8895d5"
            ]
        ]
    },
    {
        "id": "8dfadeafb83226c3",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Lấy mã xác nhận từ input",
        "func": "flow.set(\"verify_code_pass_check\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "1b0db0ce260d12a7",
        "type": "e-mail",
        "z": "2219b06636009d6c",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 2550,
        "y": 360,
        "wires": []
    },
    {
        "id": "63c7e92e0bb68be6",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Tạo selection",
        "func": "var  opts = {\n    reply_markup: JSON.stringify({\n        \"inline_keyboard\":[[\n            {\n                \"text\": \"Temperature\",\n                \"callback_data\": \"1\"\n            },\n            {\n                \"text\": \"Humidity\",\n                \"callback_data\": \"2\"\n            },\n            {\n                \"text\": \"Gas\",\n                \"callback_data\": \"3\"\n            },\n            {\n                \"text\": \"PM\",\n                \"callback_data\": \"4\"\n            }]\n        ]\n    })\n};\nmsg.error = false;\nmsg.payload.content = 'Selection?';\nmsg.payload.options = opts;\nmsg.payload.chatId = \"8223701894\";\nmsg.payload.type = \"message\"\nreturn [msg];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 2240,
        "wires": [
            [
                "2a3b17b35bebfe58"
            ]
        ]
    },
    {
        "id": "01856e9e1d31c21e",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Reply",
        "func": "let data = msg.payload.content;\n\nlet reply = \"\";\nif (data === \"1\") reply = \"Temperature: \" + (flow.get(\"temperature\") || 0) + \" °C\";\nif (data === \"2\") reply = \"Humidity: \" + (flow.get(\"humidity\") || 0) + \" %\";\nif (data === \"3\") reply = \"Gas: \" + (flow.get(\"gas\") || 0) + \" ppm\";\nif (data === \"4\") reply = \"PM: \" + (flow.get(\"pm\") || 0) + \" µg/m³\";\n\nmsg.payload = {\n    chatId: msg.payload.chatId,\n    type: \"message\",\n    content: reply\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 2340,
        "wires": [
            [
                "152bd529675591c9"
            ]
        ]
    },
    {
        "id": "ea3ec7b066627208",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Tạo selection",
        "func": "var opts = {\n    reply_markup: JSON.stringify({\n        \"inline_keyboard\": [[\n            {\n                \"text\": \"Temperature\",\n                \"callback_data\": \"Temperature\"\n            },\n            {\n                \"text\": \"Humidity\",\n                \"callback_data\": \"Humidity\"\n            },\n            {\n                \"text\": \"Gas\",\n                \"callback_data\": \"Gas\"\n            },\n            {\n                \"text\": \"PM\",\n                \"callback_data\": \"PM\"\n            }]\n        ]\n    })\n};\nmsg.error = false;\nmsg.payload.content = 'Selection?';\nmsg.payload.options = opts;\nmsg.payload.chatId = \"8223701894\";\nmsg.payload.type = \"message\"\nreturn [msg];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 600,
        "wires": [
            [
                "f30f72b68be28d6e"
            ]
        ]
    },
    {
        "id": "5622a5afdba90b71",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Reply",
        "func": "let data = msg.payload.content;\n\nif (data === \"Temperature\") {\n    flow.set(\"threshold_type\", data);\n    msg.payload.content = `Nhập giá trị threshold cho Temperature sensor (°C):`;\n}\nelse if (data === \"Humidity\") {\n    flow.set(\"threshold_type\", data);\n    msg.payload.content = `Nhập giá trị threshold cho Humidity sensor (%):`;\n}\nelse if (data === \"Gas\") {\n    flow.set(\"threshold_type\", data);\n    msg.payload.content = `Nhập giá trị threshold cho Gas sensor (ppm):`;\n}\nelse if (data === \"PM\") {\n    flow.set(\"threshold_type\", data);\n    msg.payload.content = `Nhập giá trị threshold cho PM sensor (µg/m³):`;\n}\nelse {\n    return null;\n}\n\nmsg.payload = {\n    chatId: msg.payload.chatId,\n    type: \"message\",\n    content: msg.payload.content\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 680,
        "wires": [
            [
                "9e35e4ccfc3a4f8d"
            ]
        ]
    },
    {
        "id": "4486d6402db06ebb",
        "type": "function",
        "z": "2219b06636009d6c",
        "name": "Nhận giá trị threshold",
        "func": "let type = flow.get(\"threshold_type\");\nlet value = Number(msg.payload.content);\n\nlet outTelegram = null;\nlet outTemp = null;\nlet outHum = null;\nlet outGas = null;\nlet outPM = null;\n\nif (!isNaN(value)) {\n    if (type === \"Temperature\") {\n        outTemp = { payload: value };\n    }\n    if (type === \"Humidity\") {\n        outHum = { payload: value };\n    }\n    if (type === \"Gas\") {\n        outGas = { payload: value };\n    }\n    if (type === \"PM\") {\n        outPM = { payload: value };\n    }\n    outTelegram = {\n        payload: {\n            chatId: msg.payload.chatId,\n            type: \"message\",\n            content: `Đã đặt threshold ${type} = ${value}`\n        }\n    };\n}\nreturn [outTelegram, outTemp, outHum, outGas, outPM];",
        "outputs": 5,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 860,
        "wires": [
            [
                "4b5f1147cdf38189"
            ],
            [
                "3b5dcedfabcc0ccd"
            ],
            [
                "4bce23342dc8e5df"
            ],
            [
                "83219d67e9819d1b"
            ],
            [
                "2510ab59b1cc961e"
            ]
        ]
    },
    {
        "id": "81f97db9ffd2b904",
        "type": "telegram receiver",
        "z": "2219b06636009d6c",
        "name": "",
        "bot": "4db0bf18e8f75ad8",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 90,
        "y": 860,
        "wires": [
            [
                "4486d6402db06ebb"
            ],
            []
        ]
    },
    {
        "id": "672de4c1b4e91c2d",
        "type": "telegram command",
        "z": "2219b06636009d6c",
        "name": "",
        "command": "/data",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "4db0bf18e8f75ad8",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 650,
        "y": 2240,
        "wires": [
            [
                "63c7e92e0bb68be6"
            ],
            []
        ]
    },
    {
        "id": "8843f2fe1bd85a5e",
        "type": "telegram command",
        "z": "2219b06636009d6c",
        "name": "",
        "command": "/setThreshold",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "4db0bf18e8f75ad8",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 110,
        "y": 600,
        "wires": [
            [
                "ea3ec7b066627208"
            ],
            []
        ]
    },
    {
        "id": "25ce9bad5ee0f222",
        "type": "telegram event",
        "z": "2219b06636009d6c",
        "name": "",
        "bot": "4db0bf18e8f75ad8",
        "event": "callback_query",
        "autoanswer": false,
        "x": 680,
        "y": 2340,
        "wires": [
            [
                "01856e9e1d31c21e"
            ]
        ]
    },
    {
        "id": "33a194e8a55f0672",
        "type": "telegram event",
        "z": "2219b06636009d6c",
        "name": "",
        "bot": "4db0bf18e8f75ad8",
        "event": "callback_query",
        "autoanswer": false,
        "x": 100,
        "y": 680,
        "wires": [
            [
                "5622a5afdba90b71"
            ]
        ]
    },
    {
        "id": "2a3b17b35bebfe58",
        "type": "telegram sender",
        "z": "2219b06636009d6c",
        "name": "",
        "bot": "4db0bf18e8f75ad8",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1150,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "152bd529675591c9",
        "type": "telegram sender",
        "z": "2219b06636009d6c",
        "name": "",
        "bot": "4db0bf18e8f75ad8",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1210,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "f30f72b68be28d6e",
        "type": "telegram sender",
        "z": "2219b06636009d6c",
        "name": "",
        "bot": "4db0bf18e8f75ad8",
        "haserroroutput": false,
        "outputs": 1,
        "x": 590,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "9e35e4ccfc3a4f8d",
        "type": "telegram sender",
        "z": "2219b06636009d6c",
        "name": "",
        "bot": "4db0bf18e8f75ad8",
        "haserroroutput": false,
        "outputs": 1,
        "x": 630,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "4b5f1147cdf38189",
        "type": "telegram sender",
        "z": "2219b06636009d6c",
        "name": "",
        "bot": "4db0bf18e8f75ad8",
        "haserroroutput": false,
        "outputs": 1,
        "x": 810,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "bdeabd401a32c9ce",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "431b3071c2398cba",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "0405ca8c8b89232a",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "7d66de81096da123",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "76f00fbece5ea1bb",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "19804fe612537522",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "b3978af705067685",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "1ef13deb31c0b9d7",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "a7ca0377d278377c",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "86ec90226dcc25fe",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "307f4ff9d48660f9",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "a32b179fc4ab9b72",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "login_group",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "e35064fde588d564",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "login_group",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "c9d2258851b62a8c",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "login_group",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "aa876c7518bcf269",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "login_group",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "3fa206c3d2266f04",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "login_group",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "c32911cccddad4e1",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "login_group",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "89c461b85868d9ac",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "2479d9c11390cb6d",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "0b9e943cc119e917",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "2479d9c11390cb6d",
        "order": 3,
        "width": 7,
        "height": 1
    },
    {
        "id": "d1b75bb176399067",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "bc2745e9261eecb8",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "449b1f210f70cfb6",
        "type": "ui_spacer",
        "z": "2219b06636009d6c",
        "name": "spacer",
        "group": "bc2745e9261eecb8",
        "order": 3,
        "width": 7,
        "height": 1
    },
    {
        "id": "login_group",
        "type": "ui_group",
        "name": "Chào mừng !!!",
        "tab": "login_tab",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2479d9c11390cb6d",
        "type": "ui_group",
        "name": "Môi trường hiện tại",
        "tab": "home_tab",
        "order": 1,
        "disp": true,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "bc2745e9261eecb8",
        "type": "ui_group",
        "name": "Chất lượng không khí",
        "tab": "home_tab",
        "order": 2,
        "disp": true,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "8841171fe2e5f73f",
        "type": "ui_group",
        "name": "Tùy chỉnh ngưỡng",
        "tab": "home_tab",
        "order": 4,
        "disp": true,
        "width": 28,
        "collapse": false,
        "className": ""
    },
    {
        "id": "72aa82b9e770af92",
        "type": "ui_group",
        "name": "Thông tin",
        "tab": "03624fd6e0192ed3",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "fd48b2edfc8db74c",
        "type": "ui_group",
        "name": "Mã xác nhận",
        "tab": "7aa70bc44134f696",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c57aef7b9edd92a0",
        "type": "ui_group",
        "name": "Thông tin",
        "tab": "5fbc7711003e14a0",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6f469d59f7c4209a",
        "type": "ui_group",
        "name": "Thông tin",
        "tab": "4a22a1a7d67fc9cc",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c902f90e6aca1a97",
        "type": "ui_group",
        "name": "Biểu đồ",
        "tab": "home_tab",
        "order": 3,
        "disp": true,
        "width": 14,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e31421cc3e4b27f6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.mqtt-dashboard.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "1183ee75764de5bf",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.mqtt-dashboard.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "dbef2de882ccf871",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "projectIOT",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "f0f84895977cfd6f",
        "type": "ui_group",
        "name": "Mã xác nhận",
        "tab": "317c5a2e2a252213",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "bab1bd86eeb8ab7d",
        "type": "ui_group",
        "name": "Mật khẩu mới",
        "tab": "22b0e5f6560c847f",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4db0bf18e8f75ad8",
        "type": "telegram bot",
        "botname": "AirQuality193_bot",
        "usernames": "username",
        "chatids": "8223701894",
        "baseapiurl": "",
        "testenvironment": false,
        "updatemode": "polling",
        "pollinterval": 300,
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": 6667,
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbothost": "0.0.0.0",
        "localbotport": 8443,
        "publicbotport": 8443,
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "login_tab",
        "type": "ui_tab",
        "name": "Đăng nhập",
        "icon": "lock",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "home_tab",
        "type": "ui_tab",
        "name": "Trang chủ",
        "icon": "home",
        "order": 2,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "03624fd6e0192ed3",
        "type": "ui_tab",
        "name": "Quên mật khẩu",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "7aa70bc44134f696",
        "type": "ui_tab",
        "name": "Xác nhận",
        "icon": "dashboard",
        "disabled": false,
        "hidden": true
    },
    {
        "id": "5fbc7711003e14a0",
        "type": "ui_tab",
        "name": "Mật khẩu mới",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "4a22a1a7d67fc9cc",
        "type": "ui_tab",
        "name": "Đăng ký",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "317c5a2e2a252213",
        "type": "ui_tab",
        "name": "Xác nhận",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "22b0e5f6560c847f",
        "type": "ui_tab",
        "name": "Đổi mật khẩu",
        "icon": "dashboard",
        "disabled": false,
        "hidden": true
    }
]